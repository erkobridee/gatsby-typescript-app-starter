{"version":3,"sources":["webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/types/date-time.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/utils.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/skeleton.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/BestFitFormatMatcher.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/CanonicalizeLocaleList.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/CanonicalizeTimeZoneName.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/262.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/CoerceOptionsToObject.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/BasicFormatMatcher.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/DateTimeStyleFormat.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/ToLocalTime.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/FormatDateTimePattern.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/PartitionPattern.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/PartitionDateTimePattern.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/FormatDateTime.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/PartitionDateTimeRangePattern.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/FormatDateTimeRange.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/FormatDateTimeRangeToParts.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/FormatDateTimeToParts.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/ToDateTimeOptions.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/GetOption.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/BestAvailableLocale.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/UnicodeExtensionValue.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/ResolveLocale.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/LookupMatcher.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/BestFitMatcher.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/IsValidTimeZoneName.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/InitializeDateTimeFormat.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/IsWellFormedCurrencyCode.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/DisplayNames/CanonicalCodeForDisplayNames.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/DefaultNumberOption.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/GetNumberOption.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/GetOptionsObject.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/IsSanctionedSimpleUnitIdentifier.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/IsWellFormedUnitIdentifier.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ComputeExponentForMagnitude.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ToRawPrecision.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ToRawFixed.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/FormatNumericToString.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ComputeExponent.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/CurrencyDigits.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/format_to_parts.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/PartitionNumberPattern.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/FormatNumericToParts.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/SetNumberFormatUnitOptions.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/SetNumberFormatDigitOptions.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/InitializeNumberFormat.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/PluralRules/GetOperands.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/PluralRules/InitializePluralRules.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/PluralRules/ResolvePlural.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/RelativeTimeFormat/SingularRelativeTimeUnit.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/RelativeTimeFormat/MakePartsList.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/RelativeTimeFormat/PartitionRelativeTimePattern.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/RelativeTimeFormat/FormatRelativeTime.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/RelativeTimeFormat/FormatRelativeTimeToParts.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/RelativeTimeFormat/InitializeRelativeTimeFormat.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/LookupSupportedLocales.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/SupportedLocales.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/ecma402-abstract/lib/data.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/intl-relativetimeformat/get_internal_slots.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/intl-relativetimeformat/index.js","webpack://gatsby-typescript-app-starter/./node_modules/@formatjs/intl-relativetimeformat/polyfill.js"],"names":["RangePatternType","DATE_TIME_PROPS","DATE_TIME_REGEX","expPatternTrimmer","matchSkeletonPattern","match","result","len","length","era","year","RangeError","month","day","weekday","undefined","hour12","hour","minute","second","timeZoneName","skeletonTokenToTable2","c","processDateTimePattern","pattern","literals","pattern12","replace","_","literal","push","m","i","parseDateTimeSkeleton","skeleton","rawPattern","rangePatterns","intervalFormatFallback","rangePatterns12","k","key","intervalResult","patternParts","_a","pattern_1","pattern12_1","__assign","splitRangePattern","split","filter","Boolean","map","source","startRange","endRange","shared","splitFallbackRangePattern","default","_b","PART_REGEX","parts","splitIndex","exec","index","slice","isNumericType","t","bestFitFormatMatcherScore","options","format","score","_i","DATE_TIME_PROPS_1","prop","optionsProp","formatProp","values","optionsPropIndex","indexOf","formatPropIndex","delta","Math","max","min","BestFitFormatMatcher","formats","bestScore","Infinity","bestFormat","Array","isArray","formats_1","skeletonFormat","patternFormat","skeletonValue","patternValue","requestedValue","CanonicalizeLocaleList","locales","Intl","getCanonicalLocales","CanonicalizeTimeZoneName","tz","tzData","uppercaseLinks","uppercasedTz","toUpperCase","uppercasedZones","Object","keys","reduce","all","z","ianaTimeZone","ToString","o","TypeError","String","ToNumber","val","NaN","Number","TimeClip","time","isFinite","abs","n","number","isNaN","SameValue","integer","floor","ToInteger","ToObject","arg","x","y","is","ArrayCreate","HasOwnProperty","prototype","hasOwnProperty","call","Type","MS_PER_DAY","mod","Day","WeekDay","DayFromYear","TimeFromYear","YearFromTime","ceil","DaysInYear","DayWithinYear","InLeapYear","MonthFromTime","dwy","leap","Error","DateFromTime","mft","HourFromTime","MS_PER_MINUTE","MinFromTime","MS_PER_SECOND","SecFromTime","OrdinaryHasInstance","C","O","internalSlots","boundTargetFunction","P","isPrototypeOf","CoerceOptionsToObject","create","BasicFormatMatcher","DateTimeStyleFormat","dateStyle","timeStyle","dataLocaleData","dateFormat","timeFormat","field","connector","dateTimeFormat","ToLocalTime","calendar","timeZone","zoneData","offset","dst","getApplicableZoneData","timeZoneOffset","inDST","relatedYear","yearName","pad","offsetToGmtString","gmtFormat","hourFormat","offsetInMs","style","offsetInMinutes","mins","hours","positivePattern","negativePattern","offsetStr","FormatDateTimePattern","dtf","getInternalSlots","localeData","getDefaultTimeZone","dataLocale","locale","nfOptions","useGrouping","nf","NumberFormat","nf2Options","minimumIntegerDigits","nf2","tm","patternParts_1","patternPart","p","type","value","fv","f","v","hourCycle","timeZoneData","pm","am","PartitionPattern","beginIndex","endIndex","nextIndex","substring","PartitionDateTimePattern","implDetails","FormatDateTime","parts_1","TABLE_2_FIELDS","PartitionDateTimeRangePattern","rangePattern","tm1","tm2","dateFieldsPracticallyEqual","patternContainsLargerDateField","TABLE_2_FIELDS_1","fieldName","rp","ampm","v1","v2","result_2","result_1","_c","_d","_e","rangePatternPart","partResult","_f","partResult_1","concat","FormatDateTimeRange","FormatDateTimeRangeToParts","part","FormatDateTimeToParts","ToDateTimeOptions","required","defaults","needDefaults","_g","GetOption","opts","fallback","join","BestAvailableLocale","availableLocales","candidate","has","pos","lastIndexOf","UnicodeExtensionValue","extension","size","searchValue","start","end","done","e","ResolveLocale","requestedLocales","relevantExtensionKeys","getDefaultLocale","r","foundLocale","localeMatcher","requestedLocales_1","noExtensionLocale","availableLocale","LookupMatcher","minimizedAvailableLocaleMap","minimizedAvailableLocales","Set","forEach","minimizedLocale","Locale","minimize","toString","add","l","maximizedRequestedLocale","maximize","minimizedRequestedLocale","BestFitMatcher","supportedExtension","relevantExtensionKeys_1","foundLocaleData","keyLocaleData","supportedExtensionAddition","optionsValue","privateIndex","preExtension","postExtension","IsValidTimeZoneName","zoneNames","resolveHourCycle","hc","hcDefault","TYPE_REGEX","InitializeDateTimeFormat","opt","matcher","test","ca","numberingSystem","nu","formatMatcher","isTimeRelated","NOT_A_Z_REGEX","IsWellFormedCurrencyCode","currency","UNICODE_REGION_SUBTAG_REGEX","ALPHA_4","CanonicalCodeForDisplayNames","code","region","script","toLowerCase","DefaultNumberOption","GetNumberOption","property","minimum","maximum","GetOptionsObject","SANCTIONED_UNITS","removeUnitNamespace","unit","SIMPLE_UNITS","IsSanctionedSimpleUnitIdentifier","unitIdentifier","IsWellFormedUnitIdentifier","units","numerator","denominator","ComputeExponentForMagnitude","numberFormat","magnitude","notation","compactDisplay","currencyDisplay","thresholdMap","numbers","short","decimal","long","num","pow","thresholds","magnitudeKey","other","ToRawPrecision","minPrecision","maxPrecision","xFinal","int","xToString","xToStringExponentIndex","xToStringMantissa","xToStringExponent","xToStringMantissaWithoutDecimalPoint","decimalPlaceOffset","round","adjustDecimalPlace","cut","formattedString","roundedNumber","integerDigitsCount","ToRawFixed","minFraction","maxFraction","mantissa","exponent","a","b","FormatNumericToString","intlObject","isNegative","roundingType","minimumSignificantDigits","maximumSignificantDigits","minimumFractionDigits","maximumFractionDigits","string","minInteger","ComputeExponent","formatNumberResult","CurrencyDigits","currencyDigitsData","S_UNICODE_REGEX","CARET_S_UNICODE_REGEX","RegExp","S_DOLLAR_UNICODE_REGEX","CLDR_NUMBER_PATTERN","formatToParts","numberResult","data","pl","nonNameCurrencyPart","numberPattern","sign","defaultNumberingSystem","compactNumberPattern","compactPluralRules","byNumberingSystem","selectPlural","compactPlaralRule","getPatternForSign","getCompactDisplayPattern","byCurrencyDisplay","currencies","symbol","narrow","standard","currencyData","currencySign","percent","decimalNumberPattern","afterCurrency","currencySpacing","afterInsertBetween","beforeCurrency","beforeInsertBetween","numberPatternParts","numberParts","symbols","numberPatternParts_1","apply","paritionNumberIntoParts","minusSign","plusSign","percentSign","unitPattern","unitName","currencyNameData","displayName","unitPatternParts_1","unitDisplay","unitData","simple","numeratorUnit","denominatorUnit","numeratorUnitPattern","perUnitPattern","perUnit","perPattern","compound","per","denominatorPattern","interpolateMatch","digitReplacementTable","digit","fraction","decimalSepIndex","groupSepSymbol","group","groups","patternGroups","primaryGroupingSize","secondaryGroupingSize","integerGroup","pop","exponential","exponentResult","zeroPattern","rules","select","PartitionNumberPattern","nan","infinity","signDisplay","FormatNumericToParts","SetNumberFormatUnitOptions","SetNumberFormatDigitOptions","mnfdDefault","mxfdDefault","mnid","mnfd","mxfd","mnsd","mxsd","InitializeNumberFormat","numberingSystemNames","cDigits","GetOperands","s","iv","dp","w","ft","IntegerDigits","NumberOfFractionDigits","NumberOfFractionDigitsWithoutTrailing","FractionDigits","FractionDigitsWithoutTrailing","InitializePluralRules","initializedPluralRules","ResolvePlural","PluralRuleSelect","SingularRelativeTimeUnit","MakePartsList","PartitionRelativeTimePattern","rtf","resolvedUnit","fields","numeric","pluralRules","entry","patterns","tl","po","FormatRelativeTime","FormatRelativeTimeToParts","NUMBERING_SYSTEM_REGEX","InitializeRelativeTimeFormat","initializedRelativeTimeFormat","PluralRules","LookupSupportedLocales","subset","SupportedLocales","_super","MissingLocaleDataError","_this","this","arguments","__extends","isMissingLocaleDataError","defineProperty","exports","internalSlotMap","WeakMap","get","set","tslib_1","ecma402_abstract_1","get_internal_slots_1","__importDefault","RelativeTimeFormat","constructor","el","resolvedOptions","supportedLocalesOf","__addLocaleData","data_1","d","__defaultLocale","polyfilled","Symbol","toStringTag","writable","enumerable","configurable","_1","shouldPolyfill"],"mappings":"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","file":"316-71a633eb223a953c117d.js","sourcesContent":["export var RangePatternType;\n\n(function (RangePatternType) {\n  RangePatternType[\"startRange\"] = \"startRange\";\n  RangePatternType[\"shared\"] = \"shared\";\n  RangePatternType[\"endRange\"] = \"endRange\";\n})(RangePatternType || (RangePatternType = {}));","export var DATE_TIME_PROPS = ['weekday', 'era', 'year', 'month', 'day', 'hour', 'minute', 'second', 'timeZoneName'];\nexport var removalPenalty = 120;\nexport var additionPenalty = 20;\nexport var differentNumericTypePenalty = 15;\nexport var longLessPenalty = 8;\nexport var longMorePenalty = 6;\nexport var shortLessPenalty = 6;\nexport var shortMorePenalty = 3;","import { __assign } from \"tslib\";\nimport { RangePatternType } from '../types/date-time';\n/**\n * https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * Credit: https://github.com/caridy/intl-datetimeformat-pattern/blob/master/index.js\n * with some tweaks\n */\n\nvar DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g; // trim patterns after transformations\n\nvar expPatternTrimmer = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\nfunction matchSkeletonPattern(match, result) {\n  var len = match.length;\n\n  switch (match[0]) {\n    // Era\n    case 'G':\n      result.era = len === 4 ? 'long' : len === 5 ? 'narrow' : 'short';\n      return '{era}';\n    // Year\n\n    case 'y':\n    case 'Y':\n    case 'u':\n    case 'U':\n    case 'r':\n      result.year = len === 2 ? '2-digit' : 'numeric';\n      return '{year}';\n    // Quarter\n\n    case 'q':\n    case 'Q':\n      throw new RangeError('`w/Q` (quarter) patterns are not supported');\n    // Month\n\n    case 'M':\n    case 'L':\n      result.month = ['numeric', '2-digit', 'short', 'long', 'narrow'][len - 1];\n      return '{month}';\n    // Week\n\n    case 'w':\n    case 'W':\n      throw new RangeError('`w/W` (week of year) patterns are not supported');\n\n    case 'd':\n      result.day = ['numeric', '2-digit'][len - 1];\n      return '{day}';\n\n    case 'D':\n    case 'F':\n    case 'g':\n      result.day = 'numeric';\n      return '{day}';\n    // Weekday\n\n    case 'E':\n      result.weekday = len === 4 ? 'long' : len === 5 ? 'narrow' : 'short';\n      return '{weekday}';\n\n    case 'e':\n      result.weekday = [undefined, undefined, 'short', 'long', 'narrow', 'short'][len - 1];\n      return '{weekday}';\n\n    case 'c':\n      result.weekday = [undefined, undefined, 'short', 'long', 'narrow', 'short'][len - 1];\n      return '{weekday}';\n    // Period\n\n    case 'a': // AM, PM\n\n    case 'b': // am, pm, noon, midnight\n\n    case 'B':\n      // flexible day periods\n      result.hour12 = true;\n      return '{ampm}';\n    // Hour\n\n    case 'h':\n      result.hour = ['numeric', '2-digit'][len - 1];\n      result.hour12 = true;\n      return '{hour}';\n\n    case 'H':\n      result.hour = ['numeric', '2-digit'][len - 1];\n      return '{hour}';\n\n    case 'K':\n      result.hour = ['numeric', '2-digit'][len - 1];\n      result.hour12 = true;\n      return '{hour}';\n\n    case 'k':\n      result.hour = ['numeric', '2-digit'][len - 1];\n      return '{hour}';\n\n    case 'j':\n    case 'J':\n    case 'C':\n      throw new RangeError('`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead');\n    // Minute\n\n    case 'm':\n      result.minute = ['numeric', '2-digit'][len - 1];\n      return '{minute}';\n    // Second\n\n    case 's':\n      result.second = ['numeric', '2-digit'][len - 1];\n      return '{second}';\n\n    case 'S':\n    case 'A':\n      result.second = 'numeric';\n      return '{second}';\n    // Zone\n\n    case 'z': // 1..3, 4: specific non-location format\n\n    case 'Z': // 1..3, 4, 5: The ISO8601 varios formats\n\n    case 'O': // 1, 4: miliseconds in day short, long\n\n    case 'v': // 1, 4: generic non-location format\n\n    case 'V': // 1, 2, 3, 4: time zone ID or city\n\n    case 'X': // 1, 2, 3, 4: The ISO8601 varios formats\n\n    case 'x':\n      // 1, 2, 3, 4: The ISO8601 varios formats\n      result.timeZoneName = len < 4 ? 'short' : 'long';\n      return '{timeZoneName}';\n  }\n\n  return '';\n}\n\nfunction skeletonTokenToTable2(c) {\n  switch (c) {\n    // Era\n    case 'G':\n      return 'era';\n    // Year\n\n    case 'y':\n    case 'Y':\n    case 'u':\n    case 'U':\n    case 'r':\n      return 'year';\n    // Month\n\n    case 'M':\n    case 'L':\n      return 'month';\n    // Day\n\n    case 'd':\n    case 'D':\n    case 'F':\n    case 'g':\n      return 'day';\n    // Period\n\n    case 'a': // AM, PM\n\n    case 'b': // am, pm, noon, midnight\n\n    case 'B':\n      // flexible day periods\n      return 'ampm';\n    // Hour\n\n    case 'h':\n    case 'H':\n    case 'K':\n    case 'k':\n      return 'hour';\n    // Minute\n\n    case 'm':\n      return 'minute';\n    // Second\n\n    case 's':\n    case 'S':\n    case 'A':\n      return 'second';\n\n    default:\n      throw new RangeError('Invalid range pattern token');\n  }\n}\n\nexport function processDateTimePattern(pattern, result) {\n  var literals = []; // Use skeleton to populate result, but use mapped pattern to populate pattern\n\n  var pattern12 = pattern // Double apostrophe\n  .replace(/'{2}/g, '{apostrophe}') // Apostrophe-escaped\n  .replace(/'(.*?)'/g, function (_, literal) {\n    literals.push(literal);\n    return \"$$\" + (literals.length - 1) + \"$$\";\n  }).replace(DATE_TIME_REGEX, function (m) {\n    return matchSkeletonPattern(m, result || {});\n  }); //Restore literals\n\n  if (literals.length) {\n    pattern12 = pattern12.replace(/\\$\\$(\\d+)\\$\\$/g, function (_, i) {\n      return literals[+i];\n    }).replace(/\\{apostrophe\\}/g, \"'\");\n  } // Handle apostrophe-escaped things\n\n\n  return [pattern12.replace(/([\\s\\uFEFF\\xA0])\\{ampm\\}([\\s\\uFEFF\\xA0])/, '$1').replace('{ampm}', '').replace(expPatternTrimmer, ''), pattern12];\n}\n/**\n * Parse Date time skeleton into Intl.DateTimeFormatOptions\n * Ref: https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * @public\n * @param skeleton skeleton string\n */\n\nexport function parseDateTimeSkeleton(skeleton, rawPattern, rangePatterns, intervalFormatFallback) {\n  if (rawPattern === void 0) {\n    rawPattern = skeleton;\n  }\n\n  var result = {\n    pattern: '',\n    pattern12: '',\n    skeleton: skeleton,\n    rawPattern: rawPattern,\n    rangePatterns: {},\n    rangePatterns12: {}\n  };\n\n  if (rangePatterns) {\n    for (var k in rangePatterns) {\n      var key = skeletonTokenToTable2(k);\n      var rawPattern_1 = rangePatterns[k];\n      var intervalResult = {\n        patternParts: []\n      };\n\n      var _a = processDateTimePattern(rawPattern_1, intervalResult),\n          pattern_1 = _a[0],\n          pattern12_1 = _a[1];\n\n      result.rangePatterns[key] = __assign(__assign({}, intervalResult), {\n        patternParts: splitRangePattern(pattern_1)\n      });\n      result.rangePatterns12[key] = __assign(__assign({}, intervalResult), {\n        patternParts: splitRangePattern(pattern12_1)\n      });\n    }\n  } else if (intervalFormatFallback) {\n    var patternParts = splitFallbackRangePattern(intervalFormatFallback);\n    result.rangePatterns.default = {\n      patternParts: patternParts\n    };\n    result.rangePatterns12.default = {\n      patternParts: patternParts\n    };\n  } // Process skeleton\n\n\n  skeleton.replace(DATE_TIME_REGEX, function (m) {\n    return matchSkeletonPattern(m, result);\n  });\n\n  var _b = processDateTimePattern(rawPattern),\n      pattern = _b[0],\n      pattern12 = _b[1];\n\n  result.pattern = pattern;\n  result.pattern12 = pattern12;\n  return result;\n}\nexport function splitFallbackRangePattern(pattern) {\n  var parts = pattern.split(/(\\{[0|1]\\})/g).filter(Boolean);\n  return parts.map(function (pattern) {\n    switch (pattern) {\n      case '{0}':\n        return {\n          source: RangePatternType.startRange,\n          pattern: pattern\n        };\n\n      case '{1}':\n        return {\n          source: RangePatternType.endRange,\n          pattern: pattern\n        };\n\n      default:\n        return {\n          source: RangePatternType.shared,\n          pattern: pattern\n        };\n    }\n  });\n}\nexport function splitRangePattern(pattern) {\n  var PART_REGEX = /\\{(.*?)\\}/g; // Map of part and index within the string\n\n  var parts = {};\n  var match;\n  var splitIndex = 0;\n\n  while (match = PART_REGEX.exec(pattern)) {\n    if (!(match[0] in parts)) {\n      parts[match[0]] = match.index;\n    } else {\n      splitIndex = match.index;\n      break;\n    }\n  }\n\n  if (!splitIndex) {\n    return [{\n      source: RangePatternType.startRange,\n      pattern: pattern\n    }];\n  }\n\n  return [{\n    source: RangePatternType.startRange,\n    pattern: pattern.slice(0, splitIndex)\n  }, {\n    source: RangePatternType.endRange,\n    pattern: pattern.slice(splitIndex)\n  }];\n}","import { __assign } from \"tslib\";\nimport { invariant } from '../utils';\nimport { DATE_TIME_PROPS, removalPenalty, additionPenalty, differentNumericTypePenalty, longMorePenalty, shortMorePenalty, shortLessPenalty, longLessPenalty } from './utils';\nimport { processDateTimePattern } from './skeleton';\n\nfunction isNumericType(t) {\n  return t === 'numeric' || t === '2-digit';\n}\n/**\n * Credit: https://github.com/andyearnshaw/Intl.js/blob/0958dc1ad8153f1056653ea22b8208f0df289a4e/src/12.datetimeformat.js#L611\n * with some modifications\n * @param options\n * @param format\n */\n\n\nexport function bestFitFormatMatcherScore(options, format) {\n  var score = 0;\n\n  if (options.hour12 && !format.hour12) {\n    score -= removalPenalty;\n  } else if (!options.hour12 && format.hour12) {\n    score -= additionPenalty;\n  }\n\n  for (var _i = 0, DATE_TIME_PROPS_1 = DATE_TIME_PROPS; _i < DATE_TIME_PROPS_1.length; _i++) {\n    var prop = DATE_TIME_PROPS_1[_i];\n    var optionsProp = options[prop];\n    var formatProp = format[prop];\n\n    if (optionsProp === undefined && formatProp !== undefined) {\n      score -= additionPenalty;\n    } else if (optionsProp !== undefined && formatProp === undefined) {\n      score -= removalPenalty;\n    } else if (optionsProp !== formatProp) {\n      // extra penalty for numeric vs non-numeric\n      if (isNumericType(optionsProp) !== isNumericType(formatProp)) {\n        score -= differentNumericTypePenalty;\n      } else {\n        var values = ['2-digit', 'numeric', 'narrow', 'short', 'long'];\n        var optionsPropIndex = values.indexOf(optionsProp);\n        var formatPropIndex = values.indexOf(formatProp);\n        var delta = Math.max(-2, Math.min(formatPropIndex - optionsPropIndex, 2));\n\n        if (delta === 2) {\n          score -= longMorePenalty;\n        } else if (delta === 1) {\n          score -= shortMorePenalty;\n        } else if (delta === -1) {\n          score -= shortLessPenalty;\n        } else if (delta === -2) {\n          score -= longLessPenalty;\n        }\n      }\n    }\n  }\n\n  return score;\n}\n/**\n * https://tc39.es/ecma402/#sec-bestfitformatmatcher\n * Just alias to basic for now\n * @param options\n * @param formats\n * @param implDetails Implementation details\n */\n\nexport function BestFitFormatMatcher(options, formats) {\n  var bestScore = -Infinity;\n  var bestFormat = formats[0];\n  invariant(Array.isArray(formats), 'formats should be a list of things');\n\n  for (var _i = 0, formats_1 = formats; _i < formats_1.length; _i++) {\n    var format = formats_1[_i];\n    var score = bestFitFormatMatcherScore(options, format);\n\n    if (score > bestScore) {\n      bestScore = score;\n      bestFormat = format;\n    }\n  }\n\n  var skeletonFormat = __assign({}, bestFormat);\n\n  var patternFormat = {\n    rawPattern: bestFormat.rawPattern\n  };\n  processDateTimePattern(bestFormat.rawPattern, patternFormat); // Kinda following https://github.com/unicode-org/icu/blob/dd50e38f459d84e9bf1b0c618be8483d318458ad/icu4j/main/classes/core/src/com/ibm/icu/text/DateTimePatternGenerator.java\n  // Method adjustFieldTypes\n\n  for (var prop in skeletonFormat) {\n    var skeletonValue = skeletonFormat[prop];\n    var patternValue = patternFormat[prop];\n    var requestedValue = options[prop]; // Don't mess with minute/second or we can get in the situation of\n    // 7:0:0 which is weird\n\n    if (prop === 'minute' || prop === 'second') {\n      continue;\n    } // Nothing to do here\n\n\n    if (!requestedValue) {\n      continue;\n    } // https://unicode.org/reports/tr35/tr35-dates.html#Matching_Skeletons\n    // Looks like we should not convert numeric to alphabetic but the other way\n    // around is ok\n\n\n    if (isNumericType(patternValue) && !isNumericType(requestedValue)) {\n      continue;\n    }\n\n    if (skeletonValue === requestedValue) {\n      continue;\n    }\n\n    patternFormat[prop] = requestedValue;\n  } // Copy those over\n\n\n  patternFormat.pattern = skeletonFormat.pattern;\n  patternFormat.pattern12 = skeletonFormat.pattern12;\n  patternFormat.skeleton = skeletonFormat.skeleton;\n  patternFormat.rangePatterns = skeletonFormat.rangePatterns;\n  patternFormat.rangePatterns12 = skeletonFormat.rangePatterns12;\n  return patternFormat;\n}","/**\n * http://ecma-international.org/ecma-402/7.0/index.html#sec-canonicalizelocalelist\n * @param locales\n */\nexport function CanonicalizeLocaleList(locales) {\n  // TODO\n  return Intl.getCanonicalLocales(locales);\n}","/**\n * https://tc39.es/ecma402/#sec-canonicalizetimezonename\n * @param tz\n */\nexport function CanonicalizeTimeZoneName(tz, _a) {\n  var tzData = _a.tzData,\n      uppercaseLinks = _a.uppercaseLinks;\n  var uppercasedTz = tz.toUpperCase();\n  var uppercasedZones = Object.keys(tzData).reduce(function (all, z) {\n    all[z.toUpperCase()] = z;\n    return all;\n  }, {});\n  var ianaTimeZone = uppercaseLinks[uppercasedTz] || uppercasedZones[uppercasedTz];\n\n  if (ianaTimeZone === 'Etc/UTC' || ianaTimeZone === 'Etc/GMT') {\n    return 'UTC';\n  }\n\n  return ianaTimeZone;\n}","/**\n * https://tc39.es/ecma262/#sec-tostring\n */\nexport function ToString(o) {\n  // Only symbol is irregular...\n  if (typeof o === 'symbol') {\n    throw TypeError('Cannot convert a Symbol value to a string');\n  }\n\n  return String(o);\n}\n/**\n * https://tc39.es/ecma262/#sec-tonumber\n * @param val\n */\n\nexport function ToNumber(val) {\n  if (val === undefined) {\n    return NaN;\n  }\n\n  if (val === null) {\n    return +0;\n  }\n\n  if (typeof val === 'boolean') {\n    return val ? 1 : +0;\n  }\n\n  if (typeof val === 'number') {\n    return val;\n  }\n\n  if (typeof val === 'symbol' || typeof val === 'bigint') {\n    throw new TypeError('Cannot convert symbol/bigint to number');\n  }\n\n  return Number(val);\n}\n/**\n * https://tc39.es/ecma262/#sec-tointeger\n * @param n\n */\n\nfunction ToInteger(n) {\n  var number = ToNumber(n);\n\n  if (isNaN(number) || SameValue(number, -0)) {\n    return 0;\n  }\n\n  if (isFinite(number)) {\n    return number;\n  }\n\n  var integer = Math.floor(Math.abs(number));\n\n  if (number < 0) {\n    integer = -integer;\n  }\n\n  if (SameValue(integer, -0)) {\n    return 0;\n  }\n\n  return integer;\n}\n/**\n * https://tc39.es/ecma262/#sec-timeclip\n * @param time\n */\n\n\nexport function TimeClip(time) {\n  if (!isFinite(time)) {\n    return NaN;\n  }\n\n  if (Math.abs(time) > 8.64 * 1e16) {\n    return NaN;\n  }\n\n  return ToInteger(time);\n}\n/**\n * https://tc39.es/ecma262/#sec-toobject\n * @param arg\n */\n\nexport function ToObject(arg) {\n  if (arg == null) {\n    throw new TypeError('undefined/null cannot be converted to object');\n  }\n\n  return Object(arg);\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-samevalue\n * @param x\n * @param y\n */\n\nexport function SameValue(x, y) {\n  if (Object.is) {\n    return Object.is(x, y);\n  } // SameValue algorithm\n\n\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return x !== 0 || 1 / x === 1 / y;\n  } // Step 6.a: NaN == NaN\n\n\n  return x !== x && y !== y;\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-arraycreate\n * @param len\n */\n\nexport function ArrayCreate(len) {\n  return new Array(len);\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-hasownproperty\n * @param o\n * @param prop\n */\n\nexport function HasOwnProperty(o, prop) {\n  return Object.prototype.hasOwnProperty.call(o, prop);\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-type\n * @param x\n */\n\nexport function Type(x) {\n  if (x === null) {\n    return 'Null';\n  }\n\n  if (typeof x === 'undefined') {\n    return 'Undefined';\n  }\n\n  if (typeof x === 'function' || typeof x === 'object') {\n    return 'Object';\n  }\n\n  if (typeof x === 'number') {\n    return 'Number';\n  }\n\n  if (typeof x === 'boolean') {\n    return 'Boolean';\n  }\n\n  if (typeof x === 'string') {\n    return 'String';\n  }\n\n  if (typeof x === 'symbol') {\n    return 'Symbol';\n  }\n\n  if (typeof x === 'bigint') {\n    return 'BigInt';\n  }\n}\nvar MS_PER_DAY = 86400000;\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#eqn-modulo\n * @param x\n * @param y\n * @return k of the same sign as y\n */\n\nfunction mod(x, y) {\n  return x - Math.floor(x / y) * y;\n}\n/**\n * https://tc39.es/ecma262/#eqn-Day\n * @param t\n */\n\n\nexport function Day(t) {\n  return Math.floor(t / MS_PER_DAY);\n}\n/**\n * https://tc39.es/ecma262/#sec-week-day\n * @param t\n */\n\nexport function WeekDay(t) {\n  return mod(Day(t) + 4, 7);\n}\n/**\n * https://tc39.es/ecma262/#sec-year-number\n * @param y\n */\n\nexport function DayFromYear(y) {\n  return 365 * (y - 1970) + Math.floor((y - 1969) / 4) - Math.floor((y - 1901) / 100) + Math.floor((y - 1601) / 400);\n}\n/**\n * https://tc39.es/ecma262/#sec-year-number\n * @param y\n */\n\nexport function TimeFromYear(y) {\n  return MS_PER_DAY * DayFromYear(y);\n}\n/**\n * https://tc39.es/ecma262/#sec-year-number\n * @param t\n */\n\nexport function YearFromTime(t) {\n  var min = Math.ceil(t / MS_PER_DAY / 366);\n  var y = min;\n\n  while (TimeFromYear(y) <= t) {\n    y++;\n  }\n\n  return y - 1;\n}\nexport function DaysInYear(y) {\n  if (y % 4 !== 0) {\n    return 365;\n  }\n\n  if (y % 100 !== 0) {\n    return 366;\n  }\n\n  if (y % 400 !== 0) {\n    return 365;\n  }\n\n  return 366;\n}\nexport function DayWithinYear(t) {\n  return Day(t) - DayFromYear(YearFromTime(t));\n}\nexport function InLeapYear(t) {\n  return DaysInYear(YearFromTime(t)) === 365 ? 0 : 1;\n}\n/**\n * https://tc39.es/ecma262/#sec-month-number\n * @param t\n */\n\nexport function MonthFromTime(t) {\n  var dwy = DayWithinYear(t);\n  var leap = InLeapYear(t);\n\n  if (dwy >= 0 && dwy < 31) {\n    return 0;\n  }\n\n  if (dwy < 59 + leap) {\n    return 1;\n  }\n\n  if (dwy < 90 + leap) {\n    return 2;\n  }\n\n  if (dwy < 120 + leap) {\n    return 3;\n  }\n\n  if (dwy < 151 + leap) {\n    return 4;\n  }\n\n  if (dwy < 181 + leap) {\n    return 5;\n  }\n\n  if (dwy < 212 + leap) {\n    return 6;\n  }\n\n  if (dwy < 243 + leap) {\n    return 7;\n  }\n\n  if (dwy < 273 + leap) {\n    return 8;\n  }\n\n  if (dwy < 304 + leap) {\n    return 9;\n  }\n\n  if (dwy < 334 + leap) {\n    return 10;\n  }\n\n  if (dwy < 365 + leap) {\n    return 11;\n  }\n\n  throw new Error('Invalid time');\n}\nexport function DateFromTime(t) {\n  var dwy = DayWithinYear(t);\n  var mft = MonthFromTime(t);\n  var leap = InLeapYear(t);\n\n  if (mft === 0) {\n    return dwy + 1;\n  }\n\n  if (mft === 1) {\n    return dwy - 30;\n  }\n\n  if (mft === 2) {\n    return dwy - 58 - leap;\n  }\n\n  if (mft === 3) {\n    return dwy - 89 - leap;\n  }\n\n  if (mft === 4) {\n    return dwy - 119 - leap;\n  }\n\n  if (mft === 5) {\n    return dwy - 150 - leap;\n  }\n\n  if (mft === 6) {\n    return dwy - 180 - leap;\n  }\n\n  if (mft === 7) {\n    return dwy - 211 - leap;\n  }\n\n  if (mft === 8) {\n    return dwy - 242 - leap;\n  }\n\n  if (mft === 9) {\n    return dwy - 272 - leap;\n  }\n\n  if (mft === 10) {\n    return dwy - 303 - leap;\n  }\n\n  if (mft === 11) {\n    return dwy - 333 - leap;\n  }\n\n  throw new Error('Invalid time');\n}\nvar HOURS_PER_DAY = 24;\nvar MINUTES_PER_HOUR = 60;\nvar SECONDS_PER_MINUTE = 60;\nvar MS_PER_SECOND = 1e3;\nvar MS_PER_MINUTE = MS_PER_SECOND * SECONDS_PER_MINUTE;\nvar MS_PER_HOUR = MS_PER_MINUTE * MINUTES_PER_HOUR;\nexport function HourFromTime(t) {\n  return mod(Math.floor(t / MS_PER_HOUR), HOURS_PER_DAY);\n}\nexport function MinFromTime(t) {\n  return mod(Math.floor(t / MS_PER_MINUTE), MINUTES_PER_HOUR);\n}\nexport function SecFromTime(t) {\n  return mod(Math.floor(t / MS_PER_SECOND), SECONDS_PER_MINUTE);\n}\n\nfunction IsCallable(fn) {\n  return typeof fn === 'function';\n}\n/**\n * The abstract operation OrdinaryHasInstance implements\n * the default algorithm for determining if an object O\n * inherits from the instance object inheritance path\n * provided by constructor C.\n * @param C class\n * @param O object\n * @param internalSlots internalSlots\n */\n\n\nexport function OrdinaryHasInstance(C, O, internalSlots) {\n  if (!IsCallable(C)) {\n    return false;\n  }\n\n  if (internalSlots === null || internalSlots === void 0 ? void 0 : internalSlots.boundTargetFunction) {\n    var BC = internalSlots === null || internalSlots === void 0 ? void 0 : internalSlots.boundTargetFunction;\n    return O instanceof BC;\n  }\n\n  if (typeof O !== 'object') {\n    return false;\n  }\n\n  var P = C.prototype;\n\n  if (typeof P !== 'object') {\n    throw new TypeError('OrdinaryHasInstance called on an object with an invalid prototype property.');\n  }\n\n  return Object.prototype.isPrototypeOf.call(P, O);\n}","import { ToObject } from './262';\n/**\n * https://tc39.es/ecma402/#sec-coerceoptionstoobject\n * @param options\n * @returns\n */\n\nexport function CoerceOptionsToObject(options) {\n  if (typeof options === 'undefined') {\n    return Object.create(null);\n  }\n\n  return ToObject(options);\n}","import { __assign } from \"tslib\";\nimport { invariant } from '../utils';\nimport { DATE_TIME_PROPS, additionPenalty, removalPenalty, longMorePenalty, shortMorePenalty, shortLessPenalty, longLessPenalty } from './utils';\n/**\n * https://tc39.es/ecma402/#sec-basicformatmatcher\n * @param options\n * @param formats\n */\n\nexport function BasicFormatMatcher(options, formats) {\n  var bestScore = -Infinity;\n  var bestFormat = formats[0];\n  invariant(Array.isArray(formats), 'formats should be a list of things');\n\n  for (var _i = 0, formats_1 = formats; _i < formats_1.length; _i++) {\n    var format = formats_1[_i];\n    var score = 0;\n\n    for (var _a = 0, DATE_TIME_PROPS_1 = DATE_TIME_PROPS; _a < DATE_TIME_PROPS_1.length; _a++) {\n      var prop = DATE_TIME_PROPS_1[_a];\n      var optionsProp = options[prop];\n      var formatProp = format[prop];\n\n      if (optionsProp === undefined && formatProp !== undefined) {\n        score -= additionPenalty;\n      } else if (optionsProp !== undefined && formatProp === undefined) {\n        score -= removalPenalty;\n      } else if (optionsProp !== formatProp) {\n        var values = ['2-digit', 'numeric', 'narrow', 'short', 'long'];\n        var optionsPropIndex = values.indexOf(optionsProp);\n        var formatPropIndex = values.indexOf(formatProp);\n        var delta = Math.max(-2, Math.min(formatPropIndex - optionsPropIndex, 2));\n\n        if (delta === 2) {\n          score -= longMorePenalty;\n        } else if (delta === 1) {\n          score -= shortMorePenalty;\n        } else if (delta === -1) {\n          score -= shortLessPenalty;\n        } else if (delta === -2) {\n          score -= longLessPenalty;\n        }\n      }\n    }\n\n    if (score > bestScore) {\n      bestScore = score;\n      bestFormat = format;\n    }\n  }\n\n  return __assign({}, bestFormat);\n}","import { invariant } from '../utils';\nexport function DateTimeStyleFormat(dateStyle, timeStyle, dataLocaleData) {\n  var dateFormat, timeFormat;\n\n  if (timeStyle !== undefined) {\n    invariant(timeStyle === 'full' || timeStyle === 'long' || timeStyle === 'medium' || timeStyle === 'short', 'invalid timeStyle');\n    timeFormat = dataLocaleData.timeFormat[timeStyle];\n  }\n\n  if (dateStyle !== undefined) {\n    invariant(dateStyle === 'full' || dateStyle === 'long' || dateStyle === 'medium' || dateStyle === 'short', 'invalid dateStyle');\n    dateFormat = dataLocaleData.dateFormat[dateStyle];\n  }\n\n  if (dateStyle !== undefined && timeStyle !== undefined) {\n    var format = {};\n\n    for (var field in dateFormat) {\n      if (field !== 'pattern') {\n        // @ts-ignore\n        format[field] = dateFormat[field];\n      }\n    }\n\n    for (var field in timeFormat) {\n      if (field !== 'pattern' && field !== 'pattern12') {\n        // @ts-ignore\n        format[field] = timeFormat[field];\n      }\n    }\n\n    var connector = dataLocaleData.dateTimeFormat[dateStyle];\n    var pattern = connector.replace('{0}', timeFormat.pattern).replace('{1}', dateFormat.pattern);\n    format.pattern = pattern;\n\n    if ('pattern12' in timeFormat) {\n      var pattern12 = connector.replace('{0}', timeFormat.pattern12).replace('{1}', dateFormat.pattern);\n      format.pattern12 = pattern12;\n    }\n\n    return format;\n  }\n\n  if (timeStyle !== undefined) {\n    return timeFormat;\n  }\n\n  invariant(dateStyle !== undefined, 'dateStyle should not be undefined');\n  return dateFormat;\n}","import { invariant } from '../utils';\nimport { Type, YearFromTime, WeekDay, MonthFromTime, DateFromTime, HourFromTime, MinFromTime, SecFromTime } from '../262';\n\nfunction getApplicableZoneData(t, timeZone, tzData) {\n  var _a;\n\n  var zoneData = tzData[timeZone]; // We don't have data for this so just say it's UTC\n\n  if (!zoneData) {\n    return [0, false];\n  }\n\n  var i = 0;\n  var offset = 0;\n  var dst = false;\n\n  for (; i <= zoneData.length; i++) {\n    if (i === zoneData.length || zoneData[i][0] * 1e3 > t) {\n      ;\n      _a = zoneData[i - 1], offset = _a[2], dst = _a[3];\n      break;\n    }\n  }\n\n  return [offset * 1e3, dst];\n}\n/**\n * https://tc39.es/ecma402/#sec-tolocaltime\n * @param t\n * @param calendar\n * @param timeZone\n */\n\n\nexport function ToLocalTime(t, calendar, timeZone, _a) {\n  var tzData = _a.tzData;\n  invariant(Type(t) === 'Number', 'invalid time');\n  invariant(calendar === 'gregory', 'We only support Gregory calendar right now');\n\n  var _b = getApplicableZoneData(t, timeZone, tzData),\n      timeZoneOffset = _b[0],\n      inDST = _b[1];\n\n  var tz = t + timeZoneOffset;\n  var year = YearFromTime(tz);\n  return {\n    weekday: WeekDay(tz),\n    era: year < 0 ? 'BC' : 'AD',\n    year: year,\n    relatedYear: undefined,\n    yearName: undefined,\n    month: MonthFromTime(tz),\n    day: DateFromTime(tz),\n    hour: HourFromTime(tz),\n    minute: MinFromTime(tz),\n    second: SecFromTime(tz),\n    inDST: inDST,\n    // IMPORTANT: Not in spec\n    timeZoneOffset: timeZoneOffset\n  };\n}","import { DATE_TIME_PROPS } from './utils';\nimport { ToLocalTime } from './ToLocalTime';\nimport { TimeClip } from '../262';\n\nfunction pad(n) {\n  if (n < 10) {\n    return \"0\" + n;\n  }\n\n  return String(n);\n}\n\nfunction offsetToGmtString(gmtFormat, hourFormat, offsetInMs, style) {\n  var offsetInMinutes = Math.floor(offsetInMs / 60000);\n  var mins = Math.abs(offsetInMinutes) % 60;\n  var hours = Math.floor(Math.abs(offsetInMinutes) / 60);\n\n  var _a = hourFormat.split(';'),\n      positivePattern = _a[0],\n      negativePattern = _a[1];\n\n  var offsetStr = '';\n  var pattern = offsetInMs < 0 ? negativePattern : positivePattern;\n\n  if (style === 'long') {\n    offsetStr = pattern.replace('HH', pad(hours)).replace('H', String(hours)).replace('mm', pad(mins)).replace('m', String(mins));\n  } else if (mins || hours) {\n    if (!mins) {\n      pattern = pattern.replace(/:?m+/, '');\n    }\n\n    offsetStr = pattern.replace(/H+/, String(hours)).replace(/m+/, String(mins));\n  }\n\n  return gmtFormat.replace('{0}', offsetStr);\n}\n/**\n * https://tc39.es/ecma402/#sec-partitiondatetimepattern\n * @param dtf\n * @param x\n */\n\n\nexport function FormatDateTimePattern(dtf, patternParts, x, _a) {\n  var getInternalSlots = _a.getInternalSlots,\n      localeData = _a.localeData,\n      getDefaultTimeZone = _a.getDefaultTimeZone,\n      tzData = _a.tzData;\n  x = TimeClip(x);\n  /** IMPL START */\n\n  var internalSlots = getInternalSlots(dtf);\n  var dataLocale = internalSlots.dataLocale;\n  var dataLocaleData = localeData[dataLocale];\n  /** IMPL END */\n\n  var locale = internalSlots.locale;\n  var nfOptions = Object.create(null);\n  nfOptions.useGrouping = false;\n  var nf = new Intl.NumberFormat(locale, nfOptions);\n  var nf2Options = Object.create(null);\n  nf2Options.minimumIntegerDigits = 2;\n  nf2Options.useGrouping = false;\n  var nf2 = new Intl.NumberFormat(locale, nf2Options);\n  var tm = ToLocalTime(x, // @ts-ignore\n  internalSlots.calendar, internalSlots.timeZone, {\n    tzData: tzData\n  });\n  var result = [];\n\n  for (var _i = 0, patternParts_1 = patternParts; _i < patternParts_1.length; _i++) {\n    var patternPart = patternParts_1[_i];\n    var p = patternPart.type;\n\n    if (p === 'literal') {\n      result.push({\n        type: 'literal',\n        value: patternPart.value\n      });\n    } else if (DATE_TIME_PROPS.indexOf(p) > -1) {\n      var fv = '';\n      var f = internalSlots[p]; // @ts-ignore\n\n      var v = tm[p];\n\n      if (p === 'year' && v <= 0) {\n        v = 1 - v;\n      }\n\n      if (p === 'month') {\n        v++;\n      }\n\n      var hourCycle = internalSlots.hourCycle;\n\n      if (p === 'hour' && (hourCycle === 'h11' || hourCycle === 'h12')) {\n        v = v % 12;\n\n        if (v === 0 && hourCycle === 'h12') {\n          v = 12;\n        }\n      }\n\n      if (p === 'hour' && hourCycle === 'h24') {\n        if (v === 0) {\n          v = 24;\n        }\n      }\n\n      if (f === 'numeric') {\n        fv = nf.format(v);\n      } else if (f === '2-digit') {\n        fv = nf2.format(v);\n\n        if (fv.length > 2) {\n          fv = fv.slice(fv.length - 2, fv.length);\n        }\n      } else if (f === 'narrow' || f === 'short' || f === 'long') {\n        if (p === 'era') {\n          fv = dataLocaleData[p][f][v];\n        } else if (p === 'timeZoneName') {\n          var timeZoneName = dataLocaleData.timeZoneName,\n              gmtFormat = dataLocaleData.gmtFormat,\n              hourFormat = dataLocaleData.hourFormat;\n          var timeZone = internalSlots.timeZone || getDefaultTimeZone();\n          var timeZoneData = timeZoneName[timeZone];\n\n          if (timeZoneData && timeZoneData[f]) {\n            fv = timeZoneData[f][+tm.inDST];\n          } else {\n            // Fallback to gmtFormat\n            fv = offsetToGmtString(gmtFormat, hourFormat, tm.timeZoneOffset, f);\n          }\n        } else if (p === 'month') {\n          fv = dataLocaleData.month[f][v - 1];\n        } else {\n          fv = dataLocaleData[p][f][v];\n        }\n      }\n\n      result.push({\n        type: p,\n        value: fv\n      });\n    } else if (p === 'ampm') {\n      var v = tm.hour;\n      var fv = void 0;\n\n      if (v > 11) {\n        fv = dataLocaleData.pm;\n      } else {\n        fv = dataLocaleData.am;\n      }\n\n      result.push({\n        type: 'dayPeriod',\n        value: fv\n      });\n    } else if (p === 'relatedYear') {\n      var v = tm.relatedYear; // @ts-ignore\n\n      var fv = nf.format(v);\n      result.push({\n        // @ts-ignore TODO: Fix TS type\n        type: 'relatedYear',\n        value: fv\n      });\n    } else if (p === 'yearName') {\n      var v = tm.yearName; // @ts-ignore\n\n      var fv = nf.format(v);\n      result.push({\n        // @ts-ignore TODO: Fix TS type\n        type: 'yearName',\n        value: fv\n      });\n    }\n  }\n\n  return result;\n}","import { invariant } from './utils';\n/**\n * https://tc39.es/ecma402/#sec-partitionpattern\n * @param pattern\n */\n\nexport function PartitionPattern(pattern) {\n  var result = [];\n  var beginIndex = pattern.indexOf('{');\n  var endIndex = 0;\n  var nextIndex = 0;\n  var length = pattern.length;\n\n  while (beginIndex < pattern.length && beginIndex > -1) {\n    endIndex = pattern.indexOf('}', beginIndex);\n    invariant(endIndex > beginIndex, \"Invalid pattern \" + pattern);\n\n    if (beginIndex > nextIndex) {\n      result.push({\n        type: 'literal',\n        value: pattern.substring(nextIndex, beginIndex)\n      });\n    }\n\n    result.push({\n      type: pattern.substring(beginIndex + 1, endIndex),\n      value: undefined\n    });\n    nextIndex = endIndex + 1;\n    beginIndex = pattern.indexOf('{', nextIndex);\n  }\n\n  if (nextIndex < length) {\n    result.push({\n      type: 'literal',\n      value: pattern.substring(nextIndex, length)\n    });\n  }\n\n  return result;\n}","import { TimeClip } from '../262';\nimport { FormatDateTimePattern } from './FormatDateTimePattern';\nimport { PartitionPattern } from '../PartitionPattern';\n/**\n * https://tc39.es/ecma402/#sec-partitiondatetimepattern\n * @param dtf\n * @param x\n */\n\nexport function PartitionDateTimePattern(dtf, x, implDetails) {\n  x = TimeClip(x);\n\n  if (isNaN(x)) {\n    throw new RangeError('invalid time');\n  }\n  /** IMPL START */\n\n\n  var getInternalSlots = implDetails.getInternalSlots;\n  var internalSlots = getInternalSlots(dtf);\n  /** IMPL END */\n\n  var pattern = internalSlots.pattern;\n  return FormatDateTimePattern(dtf, PartitionPattern(pattern), x, implDetails);\n}","import { PartitionDateTimePattern } from './PartitionDateTimePattern';\n/**\n * https://tc39.es/ecma402/#sec-formatdatetime\n * @param dtf DateTimeFormat\n * @param x\n */\n\nexport function FormatDateTime(dtf, x, implDetails) {\n  var parts = PartitionDateTimePattern(dtf, x, implDetails);\n  var result = '';\n\n  for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n    var part = parts_1[_i];\n    result += part.value;\n  }\n\n  return result;\n}","import { RangePatternType } from '../types/date-time';\nimport { SameValue, TimeClip } from '../262';\nimport { ToLocalTime } from './ToLocalTime';\nimport { FormatDateTimePattern } from './FormatDateTimePattern';\nimport { PartitionPattern } from '../PartitionPattern';\nvar TABLE_2_FIELDS = ['era', 'year', 'month', 'day', 'ampm', 'hour', 'minute', 'second'];\nexport function PartitionDateTimeRangePattern(dtf, x, y, implDetails) {\n  x = TimeClip(x);\n\n  if (isNaN(x)) {\n    throw new RangeError('Invalid start time');\n  }\n\n  y = TimeClip(y);\n\n  if (isNaN(y)) {\n    throw new RangeError('Invalid end time');\n  }\n  /** IMPL START */\n\n\n  var getInternalSlots = implDetails.getInternalSlots,\n      tzData = implDetails.tzData;\n  var internalSlots = getInternalSlots(dtf);\n  /** IMPL END */\n\n  var tm1 = ToLocalTime(x, // @ts-ignore\n  internalSlots.calendar, internalSlots.timeZone, {\n    tzData: tzData\n  });\n  var tm2 = ToLocalTime(y, // @ts-ignore\n  internalSlots.calendar, internalSlots.timeZone, {\n    tzData: tzData\n  });\n  var pattern = internalSlots.pattern,\n      rangePatterns = internalSlots.rangePatterns;\n  var rangePattern;\n  var dateFieldsPracticallyEqual = true;\n  var patternContainsLargerDateField = false;\n\n  for (var _i = 0, TABLE_2_FIELDS_1 = TABLE_2_FIELDS; _i < TABLE_2_FIELDS_1.length; _i++) {\n    var fieldName = TABLE_2_FIELDS_1[_i];\n\n    if (dateFieldsPracticallyEqual && !patternContainsLargerDateField) {\n      if (fieldName === 'ampm') {\n        var rp = rangePatterns.ampm;\n\n        if (rangePattern !== undefined && rp === undefined) {\n          patternContainsLargerDateField = true;\n        } else {\n          var v1 = tm1.hour;\n          var v2 = tm2.hour;\n\n          if (v1 > 11 && v2 < 11 || v1 < 11 && v2 > 11) {\n            dateFieldsPracticallyEqual = false;\n          }\n\n          rangePattern = rp;\n        }\n      } else {\n        var rp = rangePatterns[fieldName];\n\n        if (rangePattern !== undefined && rp === undefined) {\n          patternContainsLargerDateField = true;\n        } else {\n          var v1 = tm1[fieldName];\n          var v2 = tm2[fieldName];\n\n          if (!SameValue(v1, v2)) {\n            dateFieldsPracticallyEqual = false;\n          }\n\n          rangePattern = rp;\n        }\n      }\n    }\n  }\n\n  if (dateFieldsPracticallyEqual) {\n    var result_2 = FormatDateTimePattern(dtf, PartitionPattern(pattern), x, implDetails);\n\n    for (var _a = 0, result_1 = result_2; _a < result_1.length; _a++) {\n      var r = result_1[_a];\n      r.source = RangePatternType.shared;\n    }\n\n    return result_2;\n  }\n\n  var result = [];\n\n  if (rangePattern === undefined) {\n    rangePattern = rangePatterns.default;\n    /** IMPL DETAILS */\n    // Now we have to replace {0} & {1} with actual pattern\n\n    for (var _b = 0, _c = rangePattern.patternParts; _b < _c.length; _b++) {\n      var patternPart = _c[_b];\n\n      if (patternPart.pattern === '{0}' || patternPart.pattern === '{1}') {\n        patternPart.pattern = pattern;\n      }\n    }\n  }\n\n  for (var _d = 0, _e = rangePattern.patternParts; _d < _e.length; _d++) {\n    var rangePatternPart = _e[_d];\n    var source = rangePatternPart.source,\n        pattern_1 = rangePatternPart.pattern;\n    var z = void 0;\n\n    if (source === RangePatternType.startRange || source === RangePatternType.shared) {\n      z = x;\n    } else {\n      z = y;\n    }\n\n    var patternParts = PartitionPattern(pattern_1);\n    var partResult = FormatDateTimePattern(dtf, patternParts, z, implDetails);\n\n    for (var _f = 0, partResult_1 = partResult; _f < partResult_1.length; _f++) {\n      var r = partResult_1[_f];\n      r.source = source;\n    }\n\n    result = result.concat(partResult);\n  }\n\n  return result;\n}","import { PartitionDateTimeRangePattern } from './PartitionDateTimeRangePattern';\nexport function FormatDateTimeRange(dtf, x, y, implDetails) {\n  var parts = PartitionDateTimeRangePattern(dtf, x, y, implDetails);\n  var result = '';\n\n  for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n    var part = parts_1[_i];\n    result += part.value;\n  }\n\n  return result;\n}","import { PartitionDateTimeRangePattern } from './PartitionDateTimeRangePattern';\nexport function FormatDateTimeRangeToParts(dtf, x, y, implDetails) {\n  var parts = PartitionDateTimeRangePattern(dtf, x, y, implDetails);\n  var result = new Array(0);\n\n  for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n    var part = parts_1[_i];\n    result.push({\n      type: part.type,\n      value: part.value,\n      source: part.source\n    });\n  }\n\n  return result;\n}","import { PartitionDateTimePattern } from './PartitionDateTimePattern';\nimport { ArrayCreate } from '../262';\n/**\n * https://tc39.es/ecma402/#sec-formatdatetimetoparts\n *\n * @param dtf\n * @param x\n * @param implDetails\n */\n\nexport function FormatDateTimeToParts(dtf, x, implDetails) {\n  var parts = PartitionDateTimePattern(dtf, x, implDetails);\n  var result = ArrayCreate(0);\n\n  for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n    var part = parts_1[_i];\n    result.push({\n      type: part.type,\n      value: part.value\n    });\n  }\n\n  return result;\n}","import { ToObject } from '../262';\n/**\n * https://tc39.es/ecma402/#sec-todatetimeoptions\n * @param options\n * @param required\n * @param defaults\n */\n\nexport function ToDateTimeOptions(options, required, defaults) {\n  if (options === undefined) {\n    options = null;\n  } else {\n    options = ToObject(options);\n  }\n\n  options = Object.create(options);\n  var needDefaults = true;\n\n  if (required === 'date' || required === 'any') {\n    for (var _i = 0, _a = ['weekday', 'year', 'month', 'day']; _i < _a.length; _i++) {\n      var prop = _a[_i];\n      var value = options[prop];\n\n      if (value !== undefined) {\n        needDefaults = false;\n      }\n    }\n  }\n\n  if (required === 'time' || required === 'any') {\n    for (var _b = 0, _c = ['hour', 'minute', 'second']; _b < _c.length; _b++) {\n      var prop = _c[_b];\n      var value = options[prop];\n\n      if (value !== undefined) {\n        needDefaults = false;\n      }\n    }\n  }\n\n  if (options.dateStyle !== undefined || options.timeStyle !== undefined) {\n    needDefaults = false;\n  }\n\n  if (required === 'date' && options.timeStyle) {\n    throw new TypeError('Intl.DateTimeFormat date was required but timeStyle was included');\n  }\n\n  if (required === 'time' && options.dateStyle) {\n    throw new TypeError('Intl.DateTimeFormat time was required but dateStyle was included');\n  }\n\n  if (needDefaults && (defaults === 'date' || defaults === 'all')) {\n    for (var _d = 0, _e = ['year', 'month', 'day']; _d < _e.length; _d++) {\n      var prop = _e[_d];\n      options[prop] = 'numeric';\n    }\n  }\n\n  if (needDefaults && (defaults === 'time' || defaults === 'all')) {\n    for (var _f = 0, _g = ['hour', 'minute', 'second']; _f < _g.length; _f++) {\n      var prop = _g[_f];\n      options[prop] = 'numeric';\n    }\n  }\n\n  return options;\n}","import { ToString } from './262';\n/**\n * https://tc39.es/ecma402/#sec-getoption\n * @param opts\n * @param prop\n * @param type\n * @param values\n * @param fallback\n */\n\nexport function GetOption(opts, prop, type, values, fallback) {\n  if (typeof opts !== 'object') {\n    throw new TypeError('Options must be an object');\n  }\n\n  var value = opts[prop];\n\n  if (value !== undefined) {\n    if (type !== 'boolean' && type !== 'string') {\n      throw new TypeError('invalid type');\n    }\n\n    if (type === 'boolean') {\n      value = Boolean(value);\n    }\n\n    if (type === 'string') {\n      value = ToString(value);\n    }\n\n    if (values !== undefined && !values.filter(function (val) {\n      return val == value;\n    }).length) {\n      throw new RangeError(value + \" is not within \" + values.join(', '));\n    }\n\n    return value;\n  }\n\n  return fallback;\n}","/**\n * https://tc39.es/ecma402/#sec-bestavailablelocale\n * @param availableLocales\n * @param locale\n */\nexport function BestAvailableLocale(availableLocales, locale) {\n  var candidate = locale;\n\n  while (true) {\n    if (availableLocales.has(candidate)) {\n      return candidate;\n    }\n\n    var pos = candidate.lastIndexOf('-');\n\n    if (!~pos) {\n      return undefined;\n    }\n\n    if (pos >= 2 && candidate[pos - 2] === '-') {\n      pos -= 2;\n    }\n\n    candidate = candidate.slice(0, pos);\n  }\n}","import { invariant } from './utils';\n/**\n * https://tc39.es/ecma402/#sec-unicodeextensionvalue\n * @param extension\n * @param key\n */\n\nexport function UnicodeExtensionValue(extension, key) {\n  invariant(key.length === 2, 'key must have 2 elements');\n  var size = extension.length;\n  var searchValue = \"-\" + key + \"-\";\n  var pos = extension.indexOf(searchValue);\n\n  if (pos !== -1) {\n    var start = pos + 4;\n    var end = start;\n    var k = start;\n    var done = false;\n\n    while (!done) {\n      var e = extension.indexOf('-', k);\n      var len = void 0;\n\n      if (e === -1) {\n        len = size - k;\n      } else {\n        len = e - k;\n      }\n\n      if (len === 2) {\n        done = true;\n      } else if (e === -1) {\n        end = size;\n        done = true;\n      } else {\n        end = e;\n        k = e + 1;\n      }\n    }\n\n    return extension.slice(start, end);\n  }\n\n  searchValue = \"-\" + key;\n  pos = extension.indexOf(searchValue);\n\n  if (pos !== -1 && pos + 3 === size) {\n    return '';\n  }\n\n  return undefined;\n}","import { LookupMatcher } from './LookupMatcher';\nimport { BestFitMatcher } from './BestFitMatcher';\nimport { invariant } from './utils';\nimport { UnicodeExtensionValue } from './UnicodeExtensionValue';\n/**\n * https://tc39.es/ecma402/#sec-resolvelocale\n */\n\nexport function ResolveLocale(availableLocales, requestedLocales, options, relevantExtensionKeys, localeData, getDefaultLocale) {\n  var matcher = options.localeMatcher;\n  var r;\n\n  if (matcher === 'lookup') {\n    r = LookupMatcher(availableLocales, requestedLocales, getDefaultLocale);\n  } else {\n    r = BestFitMatcher(availableLocales, requestedLocales, getDefaultLocale);\n  }\n\n  var foundLocale = r.locale;\n  var result = {\n    locale: '',\n    dataLocale: foundLocale\n  };\n  var supportedExtension = '-u';\n\n  for (var _i = 0, relevantExtensionKeys_1 = relevantExtensionKeys; _i < relevantExtensionKeys_1.length; _i++) {\n    var key = relevantExtensionKeys_1[_i];\n    invariant(foundLocale in localeData, \"Missing locale data for \" + foundLocale);\n    var foundLocaleData = localeData[foundLocale];\n    invariant(typeof foundLocaleData === 'object' && foundLocaleData !== null, \"locale data \" + key + \" must be an object\");\n    var keyLocaleData = foundLocaleData[key];\n    invariant(Array.isArray(keyLocaleData), \"keyLocaleData for \" + key + \" must be an array\");\n    var value = keyLocaleData[0];\n    invariant(typeof value === 'string' || value === null, \"value must be string or null but got \" + typeof value + \" in key \" + key);\n    var supportedExtensionAddition = '';\n\n    if (r.extension) {\n      var requestedValue = UnicodeExtensionValue(r.extension, key);\n\n      if (requestedValue !== undefined) {\n        if (requestedValue !== '') {\n          if (~keyLocaleData.indexOf(requestedValue)) {\n            value = requestedValue;\n            supportedExtensionAddition = \"-\" + key + \"-\" + value;\n          }\n        } else if (~requestedValue.indexOf('true')) {\n          value = 'true';\n          supportedExtensionAddition = \"-\" + key;\n        }\n      }\n    }\n\n    if (key in options) {\n      var optionsValue = options[key];\n      invariant(typeof optionsValue === 'string' || typeof optionsValue === 'undefined' || optionsValue === null, 'optionsValue must be String, Undefined or Null');\n\n      if (~keyLocaleData.indexOf(optionsValue)) {\n        if (optionsValue !== value) {\n          value = optionsValue;\n          supportedExtensionAddition = '';\n        }\n      }\n    }\n\n    result[key] = value;\n    supportedExtension += supportedExtensionAddition;\n  }\n\n  if (supportedExtension.length > 2) {\n    var privateIndex = foundLocale.indexOf('-x-');\n\n    if (privateIndex === -1) {\n      foundLocale = foundLocale + supportedExtension;\n    } else {\n      var preExtension = foundLocale.slice(0, privateIndex);\n      var postExtension = foundLocale.slice(privateIndex, foundLocale.length);\n      foundLocale = preExtension + supportedExtension + postExtension;\n    }\n\n    foundLocale = Intl.getCanonicalLocales(foundLocale)[0];\n  }\n\n  result.locale = foundLocale;\n  return result;\n}","import { UNICODE_EXTENSION_SEQUENCE_REGEX } from './utils';\nimport { BestAvailableLocale } from './BestAvailableLocale';\n/**\n * https://tc39.es/ecma402/#sec-lookupmatcher\n * @param availableLocales\n * @param requestedLocales\n * @param getDefaultLocale\n */\n\nexport function LookupMatcher(availableLocales, requestedLocales, getDefaultLocale) {\n  var result = {\n    locale: ''\n  };\n\n  for (var _i = 0, requestedLocales_1 = requestedLocales; _i < requestedLocales_1.length; _i++) {\n    var locale = requestedLocales_1[_i];\n    var noExtensionLocale = locale.replace(UNICODE_EXTENSION_SEQUENCE_REGEX, '');\n    var availableLocale = BestAvailableLocale(availableLocales, noExtensionLocale);\n\n    if (availableLocale) {\n      result.locale = availableLocale;\n\n      if (locale !== noExtensionLocale) {\n        result.extension = locale.slice(noExtensionLocale.length + 1, locale.length);\n      }\n\n      return result;\n    }\n  }\n\n  result.locale = getDefaultLocale();\n  return result;\n}","import { BestAvailableLocale } from './BestAvailableLocale';\nimport { UNICODE_EXTENSION_SEQUENCE_REGEX } from './utils';\n/**\n * https://tc39.es/ecma402/#sec-bestfitmatcher\n * @param availableLocales\n * @param requestedLocales\n * @param getDefaultLocale\n */\n\nexport function BestFitMatcher(availableLocales, requestedLocales, getDefaultLocale) {\n  var minimizedAvailableLocaleMap = {};\n  var minimizedAvailableLocales = new Set();\n  availableLocales.forEach(function (locale) {\n    var minimizedLocale = new Intl.Locale(locale).minimize().toString();\n    minimizedAvailableLocaleMap[minimizedLocale] = locale;\n    minimizedAvailableLocales.add(minimizedLocale);\n  });\n  var foundLocale;\n\n  for (var _i = 0, requestedLocales_1 = requestedLocales; _i < requestedLocales_1.length; _i++) {\n    var l = requestedLocales_1[_i];\n\n    if (foundLocale) {\n      break;\n    }\n\n    var noExtensionLocale = l.replace(UNICODE_EXTENSION_SEQUENCE_REGEX, '');\n\n    if (availableLocales.has(noExtensionLocale)) {\n      foundLocale = noExtensionLocale;\n      break;\n    }\n\n    if (minimizedAvailableLocales.has(noExtensionLocale)) {\n      foundLocale = minimizedAvailableLocaleMap[noExtensionLocale];\n      break;\n    }\n\n    var locale = new Intl.Locale(noExtensionLocale);\n    var maximizedRequestedLocale = locale.maximize().toString();\n    var minimizedRequestedLocale = locale.minimize().toString(); // Check minimized locale\n\n    if (minimizedAvailableLocales.has(minimizedRequestedLocale)) {\n      foundLocale = minimizedAvailableLocaleMap[minimizedRequestedLocale];\n      break;\n    } // Lookup algo on maximized locale\n\n\n    foundLocale = BestAvailableLocale(minimizedAvailableLocales, maximizedRequestedLocale);\n  }\n\n  return {\n    locale: foundLocale || getDefaultLocale()\n  };\n}","/**\n * https://tc39.es/ecma402/#sec-isvalidtimezonename\n * @param tz\n * @param implDetails implementation details\n */\nexport function IsValidTimeZoneName(tz, _a) {\n  var tzData = _a.tzData,\n      uppercaseLinks = _a.uppercaseLinks;\n  var uppercasedTz = tz.toUpperCase();\n  var zoneNames = new Set();\n  Object.keys(tzData).map(function (z) {\n    return z.toUpperCase();\n  }).forEach(function (z) {\n    return zoneNames.add(z);\n  });\n  return zoneNames.has(uppercasedTz) || uppercasedTz in uppercaseLinks;\n}","import { CanonicalizeLocaleList } from '../CanonicalizeLocaleList';\nimport { ToDateTimeOptions } from './ToDateTimeOptions';\nimport { GetOption } from '../GetOption';\nimport { ResolveLocale } from '../ResolveLocale';\nimport { IsValidTimeZoneName } from '../IsValidTimeZoneName';\nimport { CanonicalizeTimeZoneName } from '../CanonicalizeTimeZoneName';\nimport { BasicFormatMatcher } from './BasicFormatMatcher';\nimport { BestFitFormatMatcher } from './BestFitFormatMatcher';\nimport { invariant } from '../utils';\nimport { DATE_TIME_PROPS } from './utils';\nimport { DateTimeStyleFormat } from './DateTimeStyleFormat';\n\nfunction isTimeRelated(opt) {\n  for (var _i = 0, _a = ['hour', 'minute', 'second']; _i < _a.length; _i++) {\n    var prop = _a[_i];\n    var value = opt[prop];\n\n    if (value !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction resolveHourCycle(hc, hcDefault, hour12) {\n  if (hc == null) {\n    hc = hcDefault;\n  }\n\n  if (hour12 !== undefined) {\n    if (hour12) {\n      if (hcDefault === 'h11' || hcDefault === 'h23') {\n        hc = 'h11';\n      } else {\n        hc = 'h12';\n      }\n    } else {\n      invariant(!hour12, 'hour12 must not be set');\n\n      if (hcDefault === 'h11' || hcDefault === 'h23') {\n        hc = 'h23';\n      } else {\n        hc = 'h24';\n      }\n    }\n  }\n\n  return hc;\n}\n\nvar TYPE_REGEX = /^[a-z0-9]{3,8}$/i;\n/**\n * https://tc39.es/ecma402/#sec-initializedatetimeformat\n * @param dtf DateTimeFormat\n * @param locales locales\n * @param opts options\n */\n\nexport function InitializeDateTimeFormat(dtf, locales, opts, _a) {\n  var getInternalSlots = _a.getInternalSlots,\n      availableLocales = _a.availableLocales,\n      localeData = _a.localeData,\n      getDefaultLocale = _a.getDefaultLocale,\n      getDefaultTimeZone = _a.getDefaultTimeZone,\n      relevantExtensionKeys = _a.relevantExtensionKeys,\n      tzData = _a.tzData,\n      uppercaseLinks = _a.uppercaseLinks; // @ts-ignore\n\n  var requestedLocales = CanonicalizeLocaleList(locales);\n  var options = ToDateTimeOptions(opts, 'any', 'date');\n  var opt = Object.create(null);\n  var matcher = GetOption(options, 'localeMatcher', 'string', ['lookup', 'best fit'], 'best fit');\n  opt.localeMatcher = matcher;\n  var calendar = GetOption(options, 'calendar', 'string', undefined, undefined);\n\n  if (calendar !== undefined && !TYPE_REGEX.test(calendar)) {\n    throw new RangeError('Malformed calendar');\n  }\n\n  var internalSlots = getInternalSlots(dtf);\n  opt.ca = calendar;\n  var numberingSystem = GetOption(options, 'numberingSystem', 'string', undefined, undefined);\n\n  if (numberingSystem !== undefined && !TYPE_REGEX.test(numberingSystem)) {\n    throw new RangeError('Malformed numbering system');\n  }\n\n  opt.nu = numberingSystem;\n  var hour12 = GetOption(options, 'hour12', 'boolean', undefined, undefined);\n  var hourCycle = GetOption(options, 'hourCycle', 'string', ['h11', 'h12', 'h23', 'h24'], undefined);\n\n  if (hour12 !== undefined) {\n    // @ts-ignore\n    hourCycle = null;\n  }\n\n  opt.hc = hourCycle;\n  var r = ResolveLocale(availableLocales, requestedLocales, opt, relevantExtensionKeys, localeData, getDefaultLocale);\n  internalSlots.locale = r.locale;\n  calendar = r.ca;\n  internalSlots.calendar = calendar;\n  internalSlots.hourCycle = r.hc;\n  internalSlots.numberingSystem = r.nu;\n  var dataLocale = r.dataLocale;\n  internalSlots.dataLocale = dataLocale;\n  var timeZone = options.timeZone;\n\n  if (timeZone !== undefined) {\n    timeZone = String(timeZone);\n\n    if (!IsValidTimeZoneName(timeZone, {\n      tzData: tzData,\n      uppercaseLinks: uppercaseLinks\n    })) {\n      throw new RangeError('Invalid timeZoneName');\n    }\n\n    timeZone = CanonicalizeTimeZoneName(timeZone, {\n      tzData: tzData,\n      uppercaseLinks: uppercaseLinks\n    });\n  } else {\n    timeZone = getDefaultTimeZone();\n  }\n\n  internalSlots.timeZone = timeZone;\n  opt = Object.create(null);\n  opt.weekday = GetOption(options, 'weekday', 'string', ['narrow', 'short', 'long'], undefined);\n  opt.era = GetOption(options, 'era', 'string', ['narrow', 'short', 'long'], undefined);\n  opt.year = GetOption(options, 'year', 'string', ['2-digit', 'numeric'], undefined);\n  opt.month = GetOption(options, 'month', 'string', ['2-digit', 'numeric', 'narrow', 'short', 'long'], undefined);\n  opt.day = GetOption(options, 'day', 'string', ['2-digit', 'numeric'], undefined);\n  opt.hour = GetOption(options, 'hour', 'string', ['2-digit', 'numeric'], undefined);\n  opt.minute = GetOption(options, 'minute', 'string', ['2-digit', 'numeric'], undefined);\n  opt.second = GetOption(options, 'second', 'string', ['2-digit', 'numeric'], undefined);\n  opt.timeZoneName = GetOption(options, 'timeZoneName', 'string', ['short', 'long'], undefined);\n  var dataLocaleData = localeData[dataLocale];\n  invariant(!!dataLocaleData, \"Missing locale data for \" + dataLocale);\n  var formats = dataLocaleData.formats[calendar]; // UNSPECCED: IMPLEMENTATION DETAILS\n\n  if (!formats) {\n    throw new RangeError(\"Calendar \\\"\" + calendar + \"\\\" is not supported. Try setting \\\"calendar\\\" to 1 of the following: \" + Object.keys(dataLocaleData.formats).join(', '));\n  }\n\n  var formatMatcher = GetOption(options, 'formatMatcher', 'string', ['basic', 'best fit'], 'best fit');\n  var dateStyle = GetOption(options, 'dateStyle', 'string', ['full', 'long', 'medium', 'short'], undefined);\n  internalSlots.dateStyle = dateStyle;\n  var timeStyle = GetOption(options, 'timeStyle', 'string', ['full', 'long', 'medium', 'short'], undefined);\n  internalSlots.timeStyle = timeStyle;\n  var bestFormat;\n\n  if (dateStyle === undefined && timeStyle === undefined) {\n    if (formatMatcher === 'basic') {\n      bestFormat = BasicFormatMatcher(opt, formats);\n    } else {\n      // IMPL DETAILS START\n      if (isTimeRelated(opt)) {\n        var hc = resolveHourCycle(internalSlots.hourCycle, dataLocaleData.hourCycle, hour12);\n        opt.hour12 = hc === 'h11' || hc === 'h12';\n      } // IMPL DETAILS END\n\n\n      bestFormat = BestFitFormatMatcher(opt, formats);\n    }\n  } else {\n    for (var _i = 0, DATE_TIME_PROPS_1 = DATE_TIME_PROPS; _i < DATE_TIME_PROPS_1.length; _i++) {\n      var prop = DATE_TIME_PROPS_1[_i];\n      var p = opt[prop];\n\n      if (p !== undefined) {\n        throw new TypeError(\"Intl.DateTimeFormat can't set option \" + prop + \" when \" + (dateStyle ? 'dateStyle' : 'timeStyle') + \" is used\");\n      }\n    }\n\n    bestFormat = DateTimeStyleFormat(dateStyle, timeStyle, dataLocaleData);\n  } // IMPL DETAIL START\n  // For debugging\n\n\n  internalSlots.format = bestFormat; // IMPL DETAIL END\n\n  for (var prop in opt) {\n    var p = bestFormat[prop];\n\n    if (p !== undefined) {\n      internalSlots[prop] = p;\n    }\n  }\n\n  var pattern;\n  var rangePatterns;\n\n  if (internalSlots.hour !== undefined) {\n    var hc = resolveHourCycle(internalSlots.hourCycle, dataLocaleData.hourCycle, hour12);\n    internalSlots.hourCycle = hc;\n\n    if (hc === 'h11' || hc === 'h12') {\n      pattern = bestFormat.pattern12;\n      rangePatterns = bestFormat.rangePatterns12;\n    } else {\n      pattern = bestFormat.pattern;\n      rangePatterns = bestFormat.rangePatterns;\n    }\n  } else {\n    // @ts-ignore\n    internalSlots.hourCycle = undefined;\n    pattern = bestFormat.pattern;\n    rangePatterns = bestFormat.rangePatterns;\n  }\n\n  internalSlots.pattern = pattern;\n  internalSlots.rangePatterns = rangePatterns;\n  return dtf;\n}","/**\n * This follows https://tc39.es/ecma402/#sec-case-sensitivity-and-case-mapping\n * @param str string to convert\n */\nfunction toUpperCase(str) {\n  return str.replace(/([a-z])/g, function (_, c) {\n    return c.toUpperCase();\n  });\n}\n\nvar NOT_A_Z_REGEX = /[^A-Z]/;\n/**\n * https://tc39.es/ecma402/#sec-iswellformedcurrencycode\n */\n\nexport function IsWellFormedCurrencyCode(currency) {\n  currency = toUpperCase(currency);\n\n  if (currency.length !== 3) {\n    return false;\n  }\n\n  if (NOT_A_Z_REGEX.test(currency)) {\n    return false;\n  }\n\n  return true;\n}","import { CanonicalizeLocaleList } from '../CanonicalizeLocaleList';\nimport { invariant } from '../utils';\nimport { IsWellFormedCurrencyCode } from '../IsWellFormedCurrencyCode';\nvar UNICODE_REGION_SUBTAG_REGEX = /^([a-z]{2}|[0-9]{3})$/i;\nvar ALPHA_4 = /^[a-z]{4}$/i;\n\nfunction isUnicodeRegionSubtag(region) {\n  return UNICODE_REGION_SUBTAG_REGEX.test(region);\n}\n\nfunction isUnicodeScriptSubtag(script) {\n  return ALPHA_4.test(script);\n}\n\nexport function CanonicalCodeForDisplayNames(type, code) {\n  if (type === 'language') {\n    return CanonicalizeLocaleList([code])[0];\n  }\n\n  if (type === 'region') {\n    if (!isUnicodeRegionSubtag(code)) {\n      throw RangeError('invalid region');\n    }\n\n    return code.toUpperCase();\n  }\n\n  if (type === 'script') {\n    if (!isUnicodeScriptSubtag(code)) {\n      throw RangeError('invalid script');\n    }\n\n    return \"\" + code[0].toUpperCase() + code.slice(1).toLowerCase();\n  }\n\n  invariant(type === 'currency', 'invalid type');\n\n  if (!IsWellFormedCurrencyCode(code)) {\n    throw RangeError('invalid currency');\n  }\n\n  return code.toUpperCase();\n}","/**\n * https://tc39.es/ecma402/#sec-defaultnumberoption\n * @param val\n * @param min\n * @param max\n * @param fallback\n */\nexport function DefaultNumberOption(val, min, max, fallback) {\n  if (val !== undefined) {\n    val = Number(val);\n\n    if (isNaN(val) || val < min || val > max) {\n      throw new RangeError(val + \" is outside of range [\" + min + \", \" + max + \"]\");\n    }\n\n    return Math.floor(val);\n  }\n\n  return fallback;\n}","/**\n * https://tc39.es/ecma402/#sec-getnumberoption\n * @param options\n * @param property\n * @param min\n * @param max\n * @param fallback\n */\nimport { DefaultNumberOption } from './DefaultNumberOption';\nexport function GetNumberOption(options, property, minimum, maximum, fallback) {\n  var val = options[property];\n  return DefaultNumberOption(val, minimum, maximum, fallback);\n}","/**\n * https://tc39.es/ecma402/#sec-getoptionsobject\n * @param options\n * @returns\n */\nexport function GetOptionsObject(options) {\n  if (typeof options === 'undefined') {\n    return Object.create(null);\n  }\n\n  if (typeof options === 'object') {\n    return options;\n  }\n\n  throw new TypeError('Options must be an object');\n}","/**\n * https://tc39.es/ecma402/#table-sanctioned-simple-unit-identifiers\n */\nexport var SANCTIONED_UNITS = ['angle-degree', 'area-acre', 'area-hectare', 'concentr-percent', 'digital-bit', 'digital-byte', 'digital-gigabit', 'digital-gigabyte', 'digital-kilobit', 'digital-kilobyte', 'digital-megabit', 'digital-megabyte', 'digital-petabyte', 'digital-terabit', 'digital-terabyte', 'duration-day', 'duration-hour', 'duration-millisecond', 'duration-minute', 'duration-month', 'duration-second', 'duration-week', 'duration-year', 'length-centimeter', 'length-foot', 'length-inch', 'length-kilometer', 'length-meter', 'length-mile-scandinavian', 'length-mile', 'length-millimeter', 'length-yard', 'mass-gram', 'mass-kilogram', 'mass-ounce', 'mass-pound', 'mass-stone', 'temperature-celsius', 'temperature-fahrenheit', 'volume-fluid-ounce', 'volume-gallon', 'volume-liter', 'volume-milliliter']; // In CLDR, the unit name always follows the form `namespace-unit` pattern.\n// For example: `digital-bit` instead of `bit`. This function removes the namespace prefix.\n\nexport function removeUnitNamespace(unit) {\n  return unit.slice(unit.indexOf('-') + 1);\n}\n/**\n * https://tc39.es/ecma402/#table-sanctioned-simple-unit-identifiers\n */\n\nexport var SIMPLE_UNITS = SANCTIONED_UNITS.map(removeUnitNamespace);\n/**\n * https://tc39.es/ecma402/#sec-issanctionedsimpleunitidentifier\n */\n\nexport function IsSanctionedSimpleUnitIdentifier(unitIdentifier) {\n  return SIMPLE_UNITS.indexOf(unitIdentifier) > -1;\n}","import { IsSanctionedSimpleUnitIdentifier } from './IsSanctionedSimpleUnitIdentifier';\n/**\n * This follows https://tc39.es/ecma402/#sec-case-sensitivity-and-case-mapping\n * @param str string to convert\n */\n\nfunction toLowerCase(str) {\n  return str.replace(/([A-Z])/g, function (_, c) {\n    return c.toLowerCase();\n  });\n}\n/**\n * https://tc39.es/ecma402/#sec-iswellformedunitidentifier\n * @param unit\n */\n\n\nexport function IsWellFormedUnitIdentifier(unit) {\n  unit = toLowerCase(unit);\n\n  if (IsSanctionedSimpleUnitIdentifier(unit)) {\n    return true;\n  }\n\n  var units = unit.split('-per-');\n\n  if (units.length !== 2) {\n    return false;\n  }\n\n  var numerator = units[0],\n      denominator = units[1];\n\n  if (!IsSanctionedSimpleUnitIdentifier(numerator) || !IsSanctionedSimpleUnitIdentifier(denominator)) {\n    return false;\n  }\n\n  return true;\n}","/**\n * The abstract operation ComputeExponentForMagnitude computes an exponent by which to scale a\n * number of the given magnitude (power of ten of the most significant digit) according to the\n * locale and the desired notation (scientific, engineering, or compact).\n */\nexport function ComputeExponentForMagnitude(numberFormat, magnitude, _a) {\n  var getInternalSlots = _a.getInternalSlots;\n  var internalSlots = getInternalSlots(numberFormat);\n  var notation = internalSlots.notation,\n      dataLocaleData = internalSlots.dataLocaleData,\n      numberingSystem = internalSlots.numberingSystem;\n\n  switch (notation) {\n    case 'standard':\n      return 0;\n\n    case 'scientific':\n      return magnitude;\n\n    case 'engineering':\n      return Math.floor(magnitude / 3) * 3;\n\n    default:\n      {\n        // Let exponent be an implementation- and locale-dependent (ILD) integer by which to scale a\n        // number of the given magnitude in compact notation for the current locale.\n        var compactDisplay = internalSlots.compactDisplay,\n            style = internalSlots.style,\n            currencyDisplay = internalSlots.currencyDisplay;\n        var thresholdMap = void 0;\n\n        if (style === 'currency' && currencyDisplay !== 'name') {\n          var currency = dataLocaleData.numbers.currency[numberingSystem] || dataLocaleData.numbers.currency[dataLocaleData.numbers.nu[0]];\n          thresholdMap = currency.short;\n        } else {\n          var decimal = dataLocaleData.numbers.decimal[numberingSystem] || dataLocaleData.numbers.decimal[dataLocaleData.numbers.nu[0]];\n          thresholdMap = compactDisplay === 'long' ? decimal.long : decimal.short;\n        }\n\n        if (!thresholdMap) {\n          return 0;\n        }\n\n        var num = String(Math.pow(10, magnitude));\n        var thresholds = Object.keys(thresholdMap); // TODO: this can be pre-processed\n\n        if (num < thresholds[0]) {\n          return 0;\n        }\n\n        if (num > thresholds[thresholds.length - 1]) {\n          return thresholds[thresholds.length - 1].length - 1;\n        }\n\n        var i = thresholds.indexOf(num);\n\n        if (i === -1) {\n          return 0;\n        } // See https://unicode.org/reports/tr35/tr35-numbers.html#Compact_Number_Formats\n        // Special handling if the pattern is precisely `0`.\n\n\n        var magnitudeKey = thresholds[i]; // TODO: do we need to handle plural here?\n\n        var compactPattern = thresholdMap[magnitudeKey].other;\n\n        if (compactPattern === '0') {\n          return 0;\n        } // Example: in zh-TW, `10000000` maps to `0000萬`. So we need to return 8 - 4 = 4 here.\n\n\n        return magnitudeKey.length - thresholdMap[magnitudeKey].other.match(/0+/)[0].length;\n      }\n  }\n}","import { repeat, getMagnitude } from '../utils';\nexport function ToRawPrecision(x, minPrecision, maxPrecision) {\n  var p = maxPrecision;\n  var m;\n  var e;\n  var xFinal;\n\n  if (x === 0) {\n    m = repeat('0', p);\n    e = 0;\n    xFinal = 0;\n  } else {\n    var xToString = x.toString(); // If xToString is formatted as scientific notation, the number is either very small or very\n    // large. If the precision of the formatted string is lower that requested max precision, we\n    // should still infer them from the formatted string, otherwise the formatted result might have\n    // precision loss (e.g. 1e41 will not have 0 in every trailing digits).\n\n    var xToStringExponentIndex = xToString.indexOf('e');\n\n    var _a = xToString.split('e'),\n        xToStringMantissa = _a[0],\n        xToStringExponent = _a[1];\n\n    var xToStringMantissaWithoutDecimalPoint = xToStringMantissa.replace('.', '');\n\n    if (xToStringExponentIndex >= 0 && xToStringMantissaWithoutDecimalPoint.length <= p) {\n      e = +xToStringExponent;\n      m = xToStringMantissaWithoutDecimalPoint + repeat('0', p - xToStringMantissaWithoutDecimalPoint.length);\n      xFinal = x;\n    } else {\n      e = getMagnitude(x);\n      var decimalPlaceOffset = e - p + 1; // n is the integer containing the required precision digits. To derive the formatted string,\n      // we will adjust its decimal place in the logic below.\n\n      var n = Math.round(adjustDecimalPlace(x, decimalPlaceOffset)); // The rounding caused the change of magnitude, so we should increment `e` by 1.\n\n      if (adjustDecimalPlace(n, p - 1) >= 10) {\n        e = e + 1; // Divide n by 10 to swallow one precision.\n\n        n = Math.floor(n / 10);\n      }\n\n      m = n.toString(); // Equivalent of n * 10 ** (e - p + 1)\n\n      xFinal = adjustDecimalPlace(n, p - 1 - e);\n    }\n  }\n\n  var int;\n\n  if (e >= p - 1) {\n    m = m + repeat('0', e - p + 1);\n    int = e + 1;\n  } else if (e >= 0) {\n    m = m.slice(0, e + 1) + \".\" + m.slice(e + 1);\n    int = e + 1;\n  } else {\n    m = \"0.\" + repeat('0', -e - 1) + m;\n    int = 1;\n  }\n\n  if (m.indexOf('.') >= 0 && maxPrecision > minPrecision) {\n    var cut = maxPrecision - minPrecision;\n\n    while (cut > 0 && m[m.length - 1] === '0') {\n      m = m.slice(0, -1);\n      cut--;\n    }\n\n    if (m[m.length - 1] === '.') {\n      m = m.slice(0, -1);\n    }\n  }\n\n  return {\n    formattedString: m,\n    roundedNumber: xFinal,\n    integerDigitsCount: int\n  }; // x / (10 ** magnitude), but try to preserve as much floating point precision as possible.\n\n  function adjustDecimalPlace(x, magnitude) {\n    return magnitude < 0 ? x * Math.pow(10, -magnitude) : x / Math.pow(10, magnitude);\n  }\n}","import { repeat } from '../utils';\n/**\n * TODO: dedup with intl-pluralrules and support BigInt\n * https://tc39.es/ecma402/#sec-torawfixed\n * @param x a finite non-negative Number or BigInt\n * @param minFraction and integer between 0 and 20\n * @param maxFraction and integer between 0 and 20\n */\n\nexport function ToRawFixed(x, minFraction, maxFraction) {\n  var f = maxFraction;\n  var n = Math.round(x * Math.pow(10, f));\n  var xFinal = n / Math.pow(10, f); // n is a positive integer, but it is possible to be greater than 1e21.\n  // In such case we will go the slow path.\n  // See also: https://tc39.es/ecma262/#sec-numeric-types-number-tostring\n\n  var m;\n\n  if (n < 1e21) {\n    m = n.toString();\n  } else {\n    m = n.toString();\n\n    var _a = m.split('e'),\n        mantissa = _a[0],\n        exponent = _a[1];\n\n    m = mantissa.replace('.', '');\n    m = m + repeat('0', Math.max(+exponent - m.length + 1, 0));\n  }\n\n  var int;\n\n  if (f !== 0) {\n    var k = m.length;\n\n    if (k <= f) {\n      var z = repeat('0', f + 1 - k);\n      m = z + m;\n      k = f + 1;\n    }\n\n    var a = m.slice(0, k - f);\n    var b = m.slice(k - f);\n    m = a + \".\" + b;\n    int = a.length;\n  } else {\n    int = m.length;\n  }\n\n  var cut = maxFraction - minFraction;\n\n  while (cut > 0 && m[m.length - 1] === '0') {\n    m = m.slice(0, -1);\n    cut--;\n  }\n\n  if (m[m.length - 1] === '.') {\n    m = m.slice(0, -1);\n  }\n\n  return {\n    formattedString: m,\n    roundedNumber: xFinal,\n    integerDigitsCount: int\n  };\n}","import { SameValue } from '../262';\nimport { ToRawPrecision } from './ToRawPrecision';\nimport { repeat } from '../utils';\nimport { ToRawFixed } from './ToRawFixed';\n/**\n * https://tc39.es/ecma402/#sec-formatnumberstring\n */\n\nexport function FormatNumericToString(intlObject, x) {\n  var isNegative = x < 0 || SameValue(x, -0);\n\n  if (isNegative) {\n    x = -x;\n  }\n\n  var result;\n  var rourndingType = intlObject.roundingType;\n\n  switch (rourndingType) {\n    case 'significantDigits':\n      result = ToRawPrecision(x, intlObject.minimumSignificantDigits, intlObject.maximumSignificantDigits);\n      break;\n\n    case 'fractionDigits':\n      result = ToRawFixed(x, intlObject.minimumFractionDigits, intlObject.maximumFractionDigits);\n      break;\n\n    default:\n      result = ToRawPrecision(x, 1, 2);\n\n      if (result.integerDigitsCount > 1) {\n        result = ToRawFixed(x, 0, 0);\n      }\n\n      break;\n  }\n\n  x = result.roundedNumber;\n  var string = result.formattedString;\n  var int = result.integerDigitsCount;\n  var minInteger = intlObject.minimumIntegerDigits;\n\n  if (int < minInteger) {\n    var forwardZeros = repeat('0', minInteger - int);\n    string = forwardZeros + string;\n  }\n\n  if (isNegative) {\n    x = -x;\n  }\n\n  return {\n    roundedNumber: x,\n    formattedString: string\n  };\n}","import { getMagnitude } from '../utils';\nimport { ComputeExponentForMagnitude } from './ComputeExponentForMagnitude';\nimport { FormatNumericToString } from './FormatNumericToString';\n/**\n * The abstract operation ComputeExponent computes an exponent (power of ten) by which to scale x\n * according to the number formatting settings. It handles cases such as 999 rounding up to 1000,\n * requiring a different exponent.\n *\n * NOT IN SPEC: it returns [exponent, magnitude].\n */\n\nexport function ComputeExponent(numberFormat, x, _a) {\n  var getInternalSlots = _a.getInternalSlots;\n\n  if (x === 0) {\n    return [0, 0];\n  }\n\n  if (x < 0) {\n    x = -x;\n  }\n\n  var magnitude = getMagnitude(x);\n  var exponent = ComputeExponentForMagnitude(numberFormat, magnitude, {\n    getInternalSlots: getInternalSlots\n  }); // Preserve more precision by doing multiplication when exponent is negative.\n\n  x = exponent < 0 ? x * Math.pow(10, -exponent) : x / Math.pow(10, exponent);\n  var formatNumberResult = FormatNumericToString(getInternalSlots(numberFormat), x);\n\n  if (formatNumberResult.roundedNumber === 0) {\n    return [exponent, magnitude];\n  }\n\n  var newMagnitude = getMagnitude(formatNumberResult.roundedNumber);\n\n  if (newMagnitude === magnitude - exponent) {\n    return [exponent, magnitude];\n  }\n\n  return [ComputeExponentForMagnitude(numberFormat, magnitude + 1, {\n    getInternalSlots: getInternalSlots\n  }), magnitude + 1];\n}","import { HasOwnProperty } from '../262';\n/**\n * https://tc39.es/ecma402/#sec-currencydigits\n */\n\nexport function CurrencyDigits(c, _a) {\n  var currencyDigitsData = _a.currencyDigitsData;\n  return HasOwnProperty(currencyDigitsData, c) ? currencyDigitsData[c] : 2;\n}","import { ToRawFixed } from './ToRawFixed';\nimport * as digitMapping from './digit-mapping.json'; // This is from: unicode-12.1.0/General_Category/Symbol/regex.js\n// IE11 does not support unicode flag, otherwise this is just /\\p{S}/u.\n\nvar S_UNICODE_REGEX = /[\\$\\+<->\\^`\\|~\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u07FE\\u07FF\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u166D\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20BF\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B98-\\u2BFF\\u2CE5-\\u2CEA\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uFB29\\uFBB2-\\uFBC1\\uFDFC\\uFDFD\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD]|\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9B\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD807[\\uDFD5-\\uDFF1]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDE8\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD838[\\uDD4F\\uDEFF]|\\uD83B[\\uDCAC\\uDCB0\\uDD2E\\uDEF0\\uDEF1]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD10-\\uDD6C\\uDD70-\\uDDAC\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED5\\uDEE0-\\uDEEC\\uDEF0-\\uDEFA\\uDF00-\\uDF73\\uDF80-\\uDFD8\\uDFE0-\\uDFEB]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDD00-\\uDD0B\\uDD0D-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDE53\\uDE60-\\uDE6D\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95]/; // /^\\p{S}/u\n\nvar CARET_S_UNICODE_REGEX = new RegExp(\"^\" + S_UNICODE_REGEX.source); // /\\p{S}$/u\n\nvar S_DOLLAR_UNICODE_REGEX = new RegExp(S_UNICODE_REGEX.source + \"$\");\nvar CLDR_NUMBER_PATTERN = /[#0](?:[\\.,][#0]+)*/g;\nexport default function formatToParts(numberResult, data, pl, options) {\n  var sign = numberResult.sign,\n      exponent = numberResult.exponent,\n      magnitude = numberResult.magnitude;\n  var notation = options.notation,\n      style = options.style,\n      numberingSystem = options.numberingSystem;\n  var defaultNumberingSystem = data.numbers.nu[0]; // #region Part 1: partition and interpolate the CLDR number pattern.\n  // ----------------------------------------------------------\n\n  var compactNumberPattern = null;\n\n  if (notation === 'compact' && magnitude) {\n    compactNumberPattern = getCompactDisplayPattern(numberResult, pl, data, style, options.compactDisplay, options.currencyDisplay, numberingSystem);\n  } // This is used multiple times\n\n\n  var nonNameCurrencyPart;\n\n  if (style === 'currency' && options.currencyDisplay !== 'name') {\n    var byCurrencyDisplay = data.currencies[options.currency];\n\n    if (byCurrencyDisplay) {\n      switch (options.currencyDisplay) {\n        case 'code':\n          nonNameCurrencyPart = options.currency;\n          break;\n\n        case 'symbol':\n          nonNameCurrencyPart = byCurrencyDisplay.symbol;\n          break;\n\n        default:\n          nonNameCurrencyPart = byCurrencyDisplay.narrow;\n          break;\n      }\n    } else {\n      // Fallback for unknown currency\n      nonNameCurrencyPart = options.currency;\n    }\n  }\n\n  var numberPattern;\n\n  if (!compactNumberPattern) {\n    // Note: if the style is unit, or is currency and the currency display is name,\n    // its unit parts will be interpolated in part 2. So here we can fallback to decimal.\n    if (style === 'decimal' || style === 'unit' || style === 'currency' && options.currencyDisplay === 'name') {\n      // Shortcut for decimal\n      var decimalData = data.numbers.decimal[numberingSystem] || data.numbers.decimal[defaultNumberingSystem];\n      numberPattern = getPatternForSign(decimalData.standard, sign);\n    } else if (style === 'currency') {\n      var currencyData = data.numbers.currency[numberingSystem] || data.numbers.currency[defaultNumberingSystem]; // We replace number pattern part with `0` for easier postprocessing.\n\n      numberPattern = getPatternForSign(currencyData[options.currencySign], sign);\n    } else {\n      // percent\n      var percentPattern = data.numbers.percent[numberingSystem] || data.numbers.percent[defaultNumberingSystem];\n      numberPattern = getPatternForSign(percentPattern, sign);\n    }\n  } else {\n    numberPattern = compactNumberPattern;\n  } // Extract the decimal number pattern string. It looks like \"#,##0,00\", which will later be\n  // used to infer decimal group sizes.\n\n\n  var decimalNumberPattern = CLDR_NUMBER_PATTERN.exec(numberPattern)[0]; // Now we start to substitute patterns\n  // 1. replace strings like `0` and `#,##0.00` with `{0}`\n  // 2. unquote characters (invariant: the quoted characters does not contain the special tokens)\n\n  numberPattern = numberPattern.replace(CLDR_NUMBER_PATTERN, '{0}').replace(/'(.)'/g, '$1'); // Handle currency spacing (both compact and non-compact).\n\n  if (style === 'currency' && options.currencyDisplay !== 'name') {\n    var currencyData = data.numbers.currency[numberingSystem] || data.numbers.currency[defaultNumberingSystem]; // See `currencySpacing` substitution rule in TR-35.\n    // Here we always assume the currencyMatch is \"[:^S:]\" and surroundingMatch is \"[:digit:]\".\n    //\n    // Example 1: for pattern \"#,##0.00¤\" with symbol \"US$\", we replace \"¤\" with the symbol,\n    // but insert an extra non-break space before the symbol, because \"[:^S:]\" matches \"U\" in\n    // \"US$\" and \"[:digit:]\" matches the latn numbering system digits.\n    //\n    // Example 2: for pattern \"¤#,##0.00\" with symbol \"US$\", there is no spacing between symbol\n    // and number, because `$` does not match \"[:^S:]\".\n    //\n    // Implementation note: here we do the best effort to infer the insertion.\n    // We also assume that `beforeInsertBetween` and `afterInsertBetween` will never be `;`.\n\n    var afterCurrency = currencyData.currencySpacing.afterInsertBetween;\n\n    if (afterCurrency && !S_DOLLAR_UNICODE_REGEX.test(nonNameCurrencyPart)) {\n      numberPattern = numberPattern.replace('¤{0}', \"\\xA4\" + afterCurrency + \"{0}\");\n    }\n\n    var beforeCurrency = currencyData.currencySpacing.beforeInsertBetween;\n\n    if (beforeCurrency && !CARET_S_UNICODE_REGEX.test(nonNameCurrencyPart)) {\n      numberPattern = numberPattern.replace('{0}¤', \"{0}\" + beforeCurrency + \"\\xA4\");\n    }\n  } // The following tokens are special: `{0}`, `¤`, `%`, `-`, `+`, `{c:...}.\n\n\n  var numberPatternParts = numberPattern.split(/({c:[^}]+}|\\{0\\}|[¤%\\-\\+])/g);\n  var numberParts = [];\n  var symbols = data.numbers.symbols[numberingSystem] || data.numbers.symbols[defaultNumberingSystem];\n\n  for (var _i = 0, numberPatternParts_1 = numberPatternParts; _i < numberPatternParts_1.length; _i++) {\n    var part = numberPatternParts_1[_i];\n\n    if (!part) {\n      continue;\n    }\n\n    switch (part) {\n      case '{0}':\n        {\n          // We only need to handle scientific and engineering notation here.\n          numberParts.push.apply(numberParts, paritionNumberIntoParts(symbols, numberResult, notation, exponent, numberingSystem, // If compact number pattern exists, do not insert group separators.\n          !compactNumberPattern && options.useGrouping, decimalNumberPattern));\n          break;\n        }\n\n      case '-':\n        numberParts.push({\n          type: 'minusSign',\n          value: symbols.minusSign\n        });\n        break;\n\n      case '+':\n        numberParts.push({\n          type: 'plusSign',\n          value: symbols.plusSign\n        });\n        break;\n\n      case '%':\n        numberParts.push({\n          type: 'percentSign',\n          value: symbols.percentSign\n        });\n        break;\n\n      case '¤':\n        // Computed above when handling currency spacing.\n        numberParts.push({\n          type: 'currency',\n          value: nonNameCurrencyPart\n        });\n        break;\n\n      default:\n        if (/^\\{c:/.test(part)) {\n          numberParts.push({\n            type: 'compact',\n            value: part.substring(3, part.length - 1)\n          });\n        } else {\n          // literal\n          numberParts.push({\n            type: 'literal',\n            value: part\n          });\n        }\n\n        break;\n    }\n  } // #endregion\n  // #region Part 2: interpolate unit pattern if necessary.\n  // ----------------------------------------------\n\n\n  switch (style) {\n    case 'currency':\n      {\n        // `currencyDisplay: 'name'` has similar pattern handling as units.\n        if (options.currencyDisplay === 'name') {\n          var unitPattern = (data.numbers.currency[numberingSystem] || data.numbers.currency[defaultNumberingSystem]).unitPattern; // Select plural\n\n          var unitName = void 0;\n          var currencyNameData = data.currencies[options.currency];\n\n          if (currencyNameData) {\n            unitName = selectPlural(pl, numberResult.roundedNumber * Math.pow(10, exponent), currencyNameData.displayName);\n          } else {\n            // Fallback for unknown currency\n            unitName = options.currency;\n          } // Do {0} and {1} substitution\n\n\n          var unitPatternParts = unitPattern.split(/(\\{[01]\\})/g);\n          var result = [];\n\n          for (var _a = 0, unitPatternParts_1 = unitPatternParts; _a < unitPatternParts_1.length; _a++) {\n            var part = unitPatternParts_1[_a];\n\n            switch (part) {\n              case '{0}':\n                result.push.apply(result, numberParts);\n                break;\n\n              case '{1}':\n                result.push({\n                  type: 'currency',\n                  value: unitName\n                });\n                break;\n\n              default:\n                if (part) {\n                  result.push({\n                    type: 'literal',\n                    value: part\n                  });\n                }\n\n                break;\n            }\n          }\n\n          return result;\n        } else {\n          return numberParts;\n        }\n      }\n\n    case 'unit':\n      {\n        var unit = options.unit,\n            unitDisplay = options.unitDisplay;\n        var unitData = data.units.simple[unit];\n        var unitPattern = void 0;\n\n        if (unitData) {\n          // Simple unit pattern\n          unitPattern = selectPlural(pl, numberResult.roundedNumber * Math.pow(10, exponent), data.units.simple[unit][unitDisplay]);\n        } else {\n          // See: http://unicode.org/reports/tr35/tr35-general.html#perUnitPatterns\n          // If cannot find unit in the simple pattern, it must be \"per\" compound pattern.\n          // Implementation note: we are not following TR-35 here because we need to format to parts!\n          var _b = unit.split('-per-'),\n              numeratorUnit = _b[0],\n              denominatorUnit = _b[1];\n\n          unitData = data.units.simple[numeratorUnit];\n          var numeratorUnitPattern = selectPlural(pl, numberResult.roundedNumber * Math.pow(10, exponent), data.units.simple[numeratorUnit][unitDisplay]);\n          var perUnitPattern = data.units.simple[denominatorUnit].perUnit[unitDisplay];\n\n          if (perUnitPattern) {\n            // perUnitPattern exists, combine it with numeratorUnitPattern\n            unitPattern = perUnitPattern.replace('{0}', numeratorUnitPattern);\n          } else {\n            // get compoundUnit pattern (e.g. \"{0} per {1}\"), repalce {0} with numerator pattern and {1} with\n            // the denominator pattern in singular form.\n            var perPattern = data.units.compound.per[unitDisplay];\n            var denominatorPattern = selectPlural(pl, 1, data.units.simple[denominatorUnit][unitDisplay]);\n            unitPattern = unitPattern = perPattern.replace('{0}', numeratorUnitPattern).replace('{1}', denominatorPattern.replace('{0}', ''));\n          }\n        }\n\n        var result = []; // We need spacing around \"{0}\" because they are not treated as \"unit\" parts, but \"literal\".\n\n        for (var _c = 0, _d = unitPattern.split(/(\\s*\\{0\\}\\s*)/); _c < _d.length; _c++) {\n          var part = _d[_c];\n          var interpolateMatch = /^(\\s*)\\{0\\}(\\s*)$/.exec(part);\n\n          if (interpolateMatch) {\n            // Space before \"{0}\"\n            if (interpolateMatch[1]) {\n              result.push({\n                type: 'literal',\n                value: interpolateMatch[1]\n              });\n            } // \"{0}\" itself\n\n\n            result.push.apply(result, numberParts); // Space after \"{0}\"\n\n            if (interpolateMatch[2]) {\n              result.push({\n                type: 'literal',\n                value: interpolateMatch[2]\n              });\n            }\n          } else if (part) {\n            result.push({\n              type: 'unit',\n              value: part\n            });\n          }\n        }\n\n        return result;\n      }\n\n    default:\n      return numberParts;\n  } // #endregion\n\n} // A subset of https://tc39.es/ecma402/#sec-partitionnotationsubpattern\n// Plus the exponent parts handling.\n\nfunction paritionNumberIntoParts(symbols, numberResult, notation, exponent, numberingSystem, useGrouping,\n/**\n * This is the decimal number pattern without signs or symbols.\n * It is used to infer the group size when `useGrouping` is true.\n *\n * A typical value looks like \"#,##0.00\" (primary group size is 3).\n * Some locales like Hindi has secondary group size of 2 (e.g. \"#,##,##0.00\").\n */\ndecimalNumberPattern) {\n  var result = []; // eslint-disable-next-line prefer-const\n\n  var n = numberResult.formattedString,\n      x = numberResult.roundedNumber;\n\n  if (isNaN(x)) {\n    return [{\n      type: 'nan',\n      value: n\n    }];\n  } else if (!isFinite(x)) {\n    return [{\n      type: 'infinity',\n      value: n\n    }];\n  }\n\n  var digitReplacementTable = digitMapping[numberingSystem];\n\n  if (digitReplacementTable) {\n    n = n.replace(/\\d/g, function (digit) {\n      return digitReplacementTable[+digit] || digit;\n    });\n  } // TODO: Else use an implementation dependent algorithm to map n to the appropriate\n  // representation of n in the given numbering system.\n\n\n  var decimalSepIndex = n.indexOf('.');\n  var integer;\n  var fraction;\n\n  if (decimalSepIndex > 0) {\n    integer = n.slice(0, decimalSepIndex);\n    fraction = n.slice(decimalSepIndex + 1);\n  } else {\n    integer = n;\n  } // #region Grouping integer digits\n  // The weird compact and x >= 10000 check is to ensure consistency with Node.js and Chrome.\n  // Note that `de` does not have compact form for thousands, but Node.js does not insert grouping separator\n  // unless the rounded number is greater than 10000:\n  //   NumberFormat('de', {notation: 'compact', compactDisplay: 'short'}).format(1234) //=> \"1234\"\n  //   NumberFormat('de').format(1234) //=> \"1.234\"\n\n\n  if (useGrouping && (notation !== 'compact' || x >= 10000)) {\n    var groupSepSymbol = symbols.group;\n    var groups = []; // > There may be two different grouping sizes: The primary grouping size used for the least\n    // > significant integer group, and the secondary grouping size used for more significant groups.\n    // > If a pattern contains multiple grouping separators, the interval between the last one and the\n    // > end of the integer defines the primary grouping size, and the interval between the last two\n    // > defines the secondary grouping size. All others are ignored.\n\n    var integerNumberPattern = decimalNumberPattern.split('.')[0];\n    var patternGroups = integerNumberPattern.split(',');\n    var primaryGroupingSize = 3;\n    var secondaryGroupingSize = 3;\n\n    if (patternGroups.length > 1) {\n      primaryGroupingSize = patternGroups[patternGroups.length - 1].length;\n    }\n\n    if (patternGroups.length > 2) {\n      secondaryGroupingSize = patternGroups[patternGroups.length - 2].length;\n    }\n\n    var i = integer.length - primaryGroupingSize;\n\n    if (i > 0) {\n      // Slice the least significant integer group\n      groups.push(integer.slice(i, i + primaryGroupingSize)); // Then iteratively push the more signicant groups\n      // TODO: handle surrogate pairs in some numbering system digits\n\n      for (i -= secondaryGroupingSize; i > 0; i -= secondaryGroupingSize) {\n        groups.push(integer.slice(i, i + secondaryGroupingSize));\n      }\n\n      groups.push(integer.slice(0, i + secondaryGroupingSize));\n    } else {\n      groups.push(integer);\n    }\n\n    while (groups.length > 0) {\n      var integerGroup = groups.pop();\n      result.push({\n        type: 'integer',\n        value: integerGroup\n      });\n\n      if (groups.length > 0) {\n        result.push({\n          type: 'group',\n          value: groupSepSymbol\n        });\n      }\n    }\n  } else {\n    result.push({\n      type: 'integer',\n      value: integer\n    });\n  } // #endregion\n\n\n  if (fraction !== undefined) {\n    result.push({\n      type: 'decimal',\n      value: symbols.decimal\n    }, {\n      type: 'fraction',\n      value: fraction\n    });\n  }\n\n  if ((notation === 'scientific' || notation === 'engineering') && isFinite(x)) {\n    result.push({\n      type: 'exponentSeparator',\n      value: symbols.exponential\n    });\n\n    if (exponent < 0) {\n      result.push({\n        type: 'exponentMinusSign',\n        value: symbols.minusSign\n      });\n      exponent = -exponent;\n    }\n\n    var exponentResult = ToRawFixed(exponent, 0, 0);\n    result.push({\n      type: 'exponentInteger',\n      value: exponentResult.formattedString\n    });\n  }\n\n  return result;\n}\n\nfunction getPatternForSign(pattern, sign) {\n  if (pattern.indexOf(';') < 0) {\n    pattern = pattern + \";-\" + pattern;\n  }\n\n  var _a = pattern.split(';'),\n      zeroPattern = _a[0],\n      negativePattern = _a[1];\n\n  switch (sign) {\n    case 0:\n      return zeroPattern;\n\n    case -1:\n      return negativePattern;\n\n    default:\n      return negativePattern.indexOf('-') >= 0 ? negativePattern.replace(/-/g, '+') : \"+\" + zeroPattern;\n  }\n} // Find the CLDR pattern for compact notation based on the magnitude of data and style.\n//\n// Example return value: \"¤ {c:laki}000;¤{c:laki} -0\" (`sw` locale):\n// - Notice the `{c:...}` token that wraps the compact literal.\n// - The consecutive zeros are normalized to single zero to match CLDR_NUMBER_PATTERN.\n//\n// Returning null means the compact display pattern cannot be found.\n\n\nfunction getCompactDisplayPattern(numberResult, pl, data, style, compactDisplay, currencyDisplay, numberingSystem) {\n  var _a;\n\n  var roundedNumber = numberResult.roundedNumber,\n      sign = numberResult.sign,\n      magnitude = numberResult.magnitude;\n  var magnitudeKey = String(Math.pow(10, magnitude));\n  var defaultNumberingSystem = data.numbers.nu[0];\n  var pattern;\n\n  if (style === 'currency' && currencyDisplay !== 'name') {\n    var byNumberingSystem = data.numbers.currency;\n    var currencyData = byNumberingSystem[numberingSystem] || byNumberingSystem[defaultNumberingSystem]; // NOTE: compact notation ignores currencySign!\n\n    var compactPluralRules = (_a = currencyData.short) === null || _a === void 0 ? void 0 : _a[magnitudeKey];\n\n    if (!compactPluralRules) {\n      return null;\n    }\n\n    pattern = selectPlural(pl, roundedNumber, compactPluralRules);\n  } else {\n    var byNumberingSystem = data.numbers.decimal;\n    var byCompactDisplay = byNumberingSystem[numberingSystem] || byNumberingSystem[defaultNumberingSystem];\n    var compactPlaralRule = byCompactDisplay[compactDisplay][magnitudeKey];\n\n    if (!compactPlaralRule) {\n      return null;\n    }\n\n    pattern = selectPlural(pl, roundedNumber, compactPlaralRule);\n  } // See https://unicode.org/reports/tr35/tr35-numbers.html#Compact_Number_Formats\n  // > If the value is precisely “0”, either explicit or defaulted, then the normal number format\n  // > pattern for that sort of object is supplied.\n\n\n  if (pattern === '0') {\n    return null;\n  }\n\n  pattern = getPatternForSign(pattern, sign) // Extract compact literal from the pattern\n  .replace(/([^\\s;\\-\\+\\d¤]+)/g, '{c:$1}') // We replace one or more zeros with a single zero so it matches `CLDR_NUMBER_PATTERN`.\n  .replace(/0+/, '0');\n  return pattern;\n}\n\nfunction selectPlural(pl, x, rules) {\n  return rules[pl.select(x)] || rules.other;\n}","import { FormatNumericToString } from './FormatNumericToString';\nimport { SameValue } from '../262';\nimport { ComputeExponent } from './ComputeExponent';\nimport formatToParts from './format_to_parts';\n/**\n * https://tc39.es/ecma402/#sec-formatnumberstring\n */\n\nexport function PartitionNumberPattern(numberFormat, x, _a) {\n  var _b;\n\n  var getInternalSlots = _a.getInternalSlots;\n  var internalSlots = getInternalSlots(numberFormat);\n  var pl = internalSlots.pl,\n      dataLocaleData = internalSlots.dataLocaleData,\n      numberingSystem = internalSlots.numberingSystem;\n  var symbols = dataLocaleData.numbers.symbols[numberingSystem] || dataLocaleData.numbers.symbols[dataLocaleData.numbers.nu[0]];\n  var magnitude = 0;\n  var exponent = 0;\n  var n;\n\n  if (isNaN(x)) {\n    n = symbols.nan;\n  } else if (!isFinite(x)) {\n    n = symbols.infinity;\n  } else {\n    if (internalSlots.style === 'percent') {\n      x *= 100;\n    }\n\n    ;\n    _b = ComputeExponent(numberFormat, x, {\n      getInternalSlots: getInternalSlots\n    }), exponent = _b[0], magnitude = _b[1]; // Preserve more precision by doing multiplication when exponent is negative.\n\n    x = exponent < 0 ? x * Math.pow(10, -exponent) : x / Math.pow(10, exponent);\n    var formatNumberResult = FormatNumericToString(internalSlots, x);\n    n = formatNumberResult.formattedString;\n    x = formatNumberResult.roundedNumber;\n  } // Based on https://tc39.es/ecma402/#sec-getnumberformatpattern\n  // We need to do this before `x` is rounded.\n\n\n  var sign;\n  var signDisplay = internalSlots.signDisplay;\n\n  switch (signDisplay) {\n    case 'never':\n      sign = 0;\n      break;\n\n    case 'auto':\n      if (SameValue(x, 0) || x > 0 || isNaN(x)) {\n        sign = 0;\n      } else {\n        sign = -1;\n      }\n\n      break;\n\n    case 'always':\n      if (SameValue(x, 0) || x > 0 || isNaN(x)) {\n        sign = 1;\n      } else {\n        sign = -1;\n      }\n\n      break;\n\n    default:\n      // x === 0 -> x is 0 or x is -0\n      if (x === 0 || isNaN(x)) {\n        sign = 0;\n      } else if (x > 0) {\n        sign = 1;\n      } else {\n        sign = -1;\n      }\n\n  }\n\n  return formatToParts({\n    roundedNumber: x,\n    formattedString: n,\n    exponent: exponent,\n    magnitude: magnitude,\n    sign: sign\n  }, internalSlots.dataLocaleData, pl, internalSlots);\n}","import { PartitionNumberPattern } from './PartitionNumberPattern';\nimport { ArrayCreate } from '../262';\nexport function FormatNumericToParts(nf, x, implDetails) {\n  var parts = PartitionNumberPattern(nf, x, implDetails);\n  var result = ArrayCreate(0);\n\n  for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n    var part = parts_1[_i];\n    result.push({\n      type: part.type,\n      value: part.value\n    });\n  }\n\n  return result;\n}","import { GetOption } from '../GetOption';\nimport { IsWellFormedCurrencyCode } from '../IsWellFormedCurrencyCode';\nimport { IsWellFormedUnitIdentifier } from '../IsWellFormedUnitIdentifier';\n/**\n * https://tc39.es/ecma402/#sec-setnumberformatunitoptions\n */\n\nexport function SetNumberFormatUnitOptions(nf, options, _a) {\n  if (options === void 0) {\n    options = Object.create(null);\n  }\n\n  var getInternalSlots = _a.getInternalSlots;\n  var internalSlots = getInternalSlots(nf);\n  var style = GetOption(options, 'style', 'string', ['decimal', 'percent', 'currency', 'unit'], 'decimal');\n  internalSlots.style = style;\n  var currency = GetOption(options, 'currency', 'string', undefined, undefined);\n\n  if (currency !== undefined && !IsWellFormedCurrencyCode(currency)) {\n    throw RangeError('Malformed currency code');\n  }\n\n  if (style === 'currency' && currency === undefined) {\n    throw TypeError('currency cannot be undefined');\n  }\n\n  var currencyDisplay = GetOption(options, 'currencyDisplay', 'string', ['code', 'symbol', 'narrowSymbol', 'name'], 'symbol');\n  var currencySign = GetOption(options, 'currencySign', 'string', ['standard', 'accounting'], 'standard');\n  var unit = GetOption(options, 'unit', 'string', undefined, undefined);\n\n  if (unit !== undefined && !IsWellFormedUnitIdentifier(unit)) {\n    throw RangeError('Invalid unit argument for Intl.NumberFormat()');\n  }\n\n  if (style === 'unit' && unit === undefined) {\n    throw TypeError('unit cannot be undefined');\n  }\n\n  var unitDisplay = GetOption(options, 'unitDisplay', 'string', ['short', 'narrow', 'long'], 'short');\n\n  if (style === 'currency') {\n    internalSlots.currency = currency.toUpperCase();\n    internalSlots.currencyDisplay = currencyDisplay;\n    internalSlots.currencySign = currencySign;\n  }\n\n  if (style === 'unit') {\n    internalSlots.unit = unit;\n    internalSlots.unitDisplay = unitDisplay;\n  }\n}","import { GetNumberOption } from '../GetNumberOption';\nimport { DefaultNumberOption } from '../DefaultNumberOption';\n/**\n * https://tc39.es/ecma402/#sec-setnfdigitoptions\n */\n\nexport function SetNumberFormatDigitOptions(internalSlots, opts, mnfdDefault, mxfdDefault, notation) {\n  var mnid = GetNumberOption(opts, 'minimumIntegerDigits', 1, 21, 1);\n  var mnfd = opts.minimumFractionDigits;\n  var mxfd = opts.maximumFractionDigits;\n  var mnsd = opts.minimumSignificantDigits;\n  var mxsd = opts.maximumSignificantDigits;\n  internalSlots.minimumIntegerDigits = mnid;\n\n  if (mnsd !== undefined || mxsd !== undefined) {\n    internalSlots.roundingType = 'significantDigits';\n    mnsd = DefaultNumberOption(mnsd, 1, 21, 1);\n    mxsd = DefaultNumberOption(mxsd, mnsd, 21, 21);\n    internalSlots.minimumSignificantDigits = mnsd;\n    internalSlots.maximumSignificantDigits = mxsd;\n  } else if (mnfd !== undefined || mxfd !== undefined) {\n    internalSlots.roundingType = 'fractionDigits';\n    mnfd = DefaultNumberOption(mnfd, 0, 20, mnfdDefault);\n    var mxfdActualDefault = Math.max(mnfd, mxfdDefault);\n    mxfd = DefaultNumberOption(mxfd, mnfd, 20, mxfdActualDefault);\n    internalSlots.minimumFractionDigits = mnfd;\n    internalSlots.maximumFractionDigits = mxfd;\n  } else if (notation === 'compact') {\n    internalSlots.roundingType = 'compactRounding';\n  } else {\n    internalSlots.roundingType = 'fractionDigits';\n    internalSlots.minimumFractionDigits = mnfdDefault;\n    internalSlots.maximumFractionDigits = mxfdDefault;\n  }\n}","import { CanonicalizeLocaleList } from '../CanonicalizeLocaleList';\nimport { GetOption } from '../GetOption';\nimport { ResolveLocale } from '../ResolveLocale';\nimport { SetNumberFormatUnitOptions } from './SetNumberFormatUnitOptions';\nimport { CurrencyDigits } from './CurrencyDigits';\nimport { SetNumberFormatDigitOptions } from './SetNumberFormatDigitOptions';\nimport { invariant } from '../utils';\nimport { CoerceOptionsToObject } from '../CoerceOptionsToObject';\n/**\n * https://tc39.es/ecma402/#sec-initializenumberformat\n */\n\nexport function InitializeNumberFormat(nf, locales, opts, _a) {\n  var getInternalSlots = _a.getInternalSlots,\n      localeData = _a.localeData,\n      availableLocales = _a.availableLocales,\n      numberingSystemNames = _a.numberingSystemNames,\n      getDefaultLocale = _a.getDefaultLocale,\n      currencyDigitsData = _a.currencyDigitsData; // @ts-ignore\n\n  var requestedLocales = CanonicalizeLocaleList(locales);\n  var options = CoerceOptionsToObject(opts);\n  var opt = Object.create(null);\n  var matcher = GetOption(options, 'localeMatcher', 'string', ['lookup', 'best fit'], 'best fit');\n  opt.localeMatcher = matcher;\n  var numberingSystem = GetOption(options, 'numberingSystem', 'string', undefined, undefined);\n\n  if (numberingSystem !== undefined && numberingSystemNames.indexOf(numberingSystem) < 0) {\n    // 8.a. If numberingSystem does not match the Unicode Locale Identifier type nonterminal,\n    // throw a RangeError exception.\n    throw RangeError(\"Invalid numberingSystems: \" + numberingSystem);\n  }\n\n  opt.nu = numberingSystem;\n  var r = ResolveLocale(availableLocales, requestedLocales, opt, // [[RelevantExtensionKeys]] slot, which is a constant\n  ['nu'], localeData, getDefaultLocale);\n  var dataLocaleData = localeData[r.dataLocale];\n  invariant(!!dataLocaleData, \"Missing locale data for \" + r.dataLocale);\n  var internalSlots = getInternalSlots(nf);\n  internalSlots.locale = r.locale;\n  internalSlots.dataLocale = r.dataLocale;\n  internalSlots.numberingSystem = r.nu;\n  internalSlots.dataLocaleData = dataLocaleData;\n  SetNumberFormatUnitOptions(nf, options, {\n    getInternalSlots: getInternalSlots\n  });\n  var style = internalSlots.style;\n  var mnfdDefault;\n  var mxfdDefault;\n\n  if (style === 'currency') {\n    var currency = internalSlots.currency;\n    var cDigits = CurrencyDigits(currency, {\n      currencyDigitsData: currencyDigitsData\n    });\n    mnfdDefault = cDigits;\n    mxfdDefault = cDigits;\n  } else {\n    mnfdDefault = 0;\n    mxfdDefault = style === 'percent' ? 0 : 3;\n  }\n\n  var notation = GetOption(options, 'notation', 'string', ['standard', 'scientific', 'engineering', 'compact'], 'standard');\n  internalSlots.notation = notation;\n  SetNumberFormatDigitOptions(internalSlots, options, mnfdDefault, mxfdDefault, notation);\n  var compactDisplay = GetOption(options, 'compactDisplay', 'string', ['short', 'long'], 'short');\n\n  if (notation === 'compact') {\n    internalSlots.compactDisplay = compactDisplay;\n  }\n\n  var useGrouping = GetOption(options, 'useGrouping', 'boolean', undefined, true);\n  internalSlots.useGrouping = useGrouping;\n  var signDisplay = GetOption(options, 'signDisplay', 'string', ['auto', 'never', 'always', 'exceptZero'], 'auto');\n  internalSlots.signDisplay = signDisplay;\n  return nf;\n}","import { invariant } from '../utils';\nimport { ToNumber } from '../262';\n/**\n * http://ecma-international.org/ecma-402/7.0/index.html#sec-getoperands\n * @param s\n */\n\nexport function GetOperands(s) {\n  invariant(typeof s === 'string', \"GetOperands should have been called with a string\");\n  var n = ToNumber(s);\n  invariant(isFinite(n), 'n should be finite');\n  var dp = s.indexOf('.');\n  var iv;\n  var f;\n  var v;\n  var fv = '';\n\n  if (dp === -1) {\n    iv = n;\n    f = 0;\n    v = 0;\n  } else {\n    iv = s.slice(0, dp);\n    fv = s.slice(dp, s.length);\n    f = ToNumber(fv);\n    v = fv.length;\n  }\n\n  var i = Math.abs(ToNumber(iv));\n  var w;\n  var t;\n\n  if (f !== 0) {\n    var ft = fv.replace(/0+$/, '');\n    w = ft.length;\n    t = ToNumber(ft);\n  } else {\n    w = 0;\n    t = 0;\n  }\n\n  return {\n    Number: n,\n    IntegerDigits: i,\n    NumberOfFractionDigits: v,\n    NumberOfFractionDigitsWithoutTrailing: w,\n    FractionDigits: f,\n    FractionDigitsWithoutTrailing: t\n  };\n}","import { CanonicalizeLocaleList } from '../CanonicalizeLocaleList';\nimport { GetOption } from '../GetOption';\nimport { SetNumberFormatDigitOptions } from '../NumberFormat/SetNumberFormatDigitOptions';\nimport { ResolveLocale } from '../ResolveLocale';\nimport { CoerceOptionsToObject } from '../CoerceOptionsToObject';\nexport function InitializePluralRules(pl, locales, options, _a) {\n  var availableLocales = _a.availableLocales,\n      relevantExtensionKeys = _a.relevantExtensionKeys,\n      localeData = _a.localeData,\n      getDefaultLocale = _a.getDefaultLocale,\n      getInternalSlots = _a.getInternalSlots;\n  var requestedLocales = CanonicalizeLocaleList(locales);\n  var opt = Object.create(null);\n  var opts = CoerceOptionsToObject(options);\n  var internalSlots = getInternalSlots(pl);\n  internalSlots.initializedPluralRules = true;\n  var matcher = GetOption(opts, 'localeMatcher', 'string', ['best fit', 'lookup'], 'best fit');\n  opt.localeMatcher = matcher;\n  internalSlots.type = GetOption(opts, 'type', 'string', ['cardinal', 'ordinal'], 'cardinal');\n  SetNumberFormatDigitOptions(internalSlots, opts, 0, 3, 'standard');\n  var r = ResolveLocale(availableLocales, requestedLocales, opt, relevantExtensionKeys, localeData, getDefaultLocale);\n  internalSlots.locale = r.locale;\n  return pl;\n}","import { invariant } from '../utils';\nimport { Type } from '../262';\nimport { FormatNumericToString } from '../NumberFormat/FormatNumericToString';\nimport { GetOperands } from './GetOperands';\n/**\n * http://ecma-international.org/ecma-402/7.0/index.html#sec-resolveplural\n * @param pl\n * @param n\n * @param PluralRuleSelect Has to pass in bc it's implementation-specific\n */\n\nexport function ResolvePlural(pl, n, _a) {\n  var getInternalSlots = _a.getInternalSlots,\n      PluralRuleSelect = _a.PluralRuleSelect;\n  var internalSlots = getInternalSlots(pl);\n  invariant(Type(internalSlots) === 'Object', 'pl has to be an object');\n  invariant('initializedPluralRules' in internalSlots, 'pluralrules must be initialized');\n  invariant(Type(n) === 'Number', 'n must be a number');\n\n  if (!isFinite(n)) {\n    return 'other';\n  }\n\n  var locale = internalSlots.locale,\n      type = internalSlots.type;\n  var res = FormatNumericToString(internalSlots, n);\n  var s = res.formattedString;\n  var operands = GetOperands(s);\n  return PluralRuleSelect(locale, type, n, operands);\n}","import { invariant } from '../utils';\nimport { Type } from '../262';\n/**\n * https://tc39.es/proposal-intl-relative-time/#sec-singularrelativetimeunit\n * @param unit\n */\n\nexport function SingularRelativeTimeUnit(unit) {\n  invariant(Type(unit) === 'String', 'unit must be a string');\n  if (unit === 'seconds') return 'second';\n  if (unit === 'minutes') return 'minute';\n  if (unit === 'hours') return 'hour';\n  if (unit === 'days') return 'day';\n  if (unit === 'weeks') return 'week';\n  if (unit === 'months') return 'month';\n  if (unit === 'quarters') return 'quarter';\n  if (unit === 'years') return 'year';\n\n  if (unit !== 'second' && unit !== 'minute' && unit !== 'hour' && unit !== 'day' && unit !== 'week' && unit !== 'month' && unit !== 'quarter' && unit !== 'year') {\n    throw new RangeError('invalid unit');\n  }\n\n  return unit;\n}","import { PartitionPattern } from '../PartitionPattern';\nimport { invariant } from '../utils';\nexport function MakePartsList(pattern, unit, parts) {\n  var patternParts = PartitionPattern(pattern);\n  var result = [];\n\n  for (var _i = 0, patternParts_1 = patternParts; _i < patternParts_1.length; _i++) {\n    var patternPart = patternParts_1[_i];\n\n    if (patternPart.type === 'literal') {\n      result.push({\n        type: 'literal',\n        value: patternPart.value\n      });\n    } else {\n      invariant(patternPart.type === '0', \"Malformed pattern \" + pattern);\n\n      for (var _a = 0, parts_1 = parts; _a < parts_1.length; _a++) {\n        var part = parts_1[_a];\n        result.push({\n          type: part.type,\n          value: part.value,\n          unit: unit\n        });\n      }\n    }\n  }\n\n  return result;\n}","import { invariant } from '../utils';\nimport { SingularRelativeTimeUnit } from './SingularRelativeTimeUnit';\nimport { MakePartsList } from './MakePartsList';\nimport { ToString, Type, SameValue } from '../262';\nexport function PartitionRelativeTimePattern(rtf, value, unit, _a) {\n  var getInternalSlots = _a.getInternalSlots;\n  invariant(Type(value) === 'Number', \"value must be number, instead got \" + typeof value, TypeError);\n  invariant(Type(unit) === 'String', \"unit must be number, instead got \" + typeof value, TypeError);\n\n  if (isNaN(value) || !isFinite(value)) {\n    throw new RangeError(\"Invalid value \" + value);\n  }\n\n  var resolvedUnit = SingularRelativeTimeUnit(unit);\n\n  var _b = getInternalSlots(rtf),\n      fields = _b.fields,\n      style = _b.style,\n      numeric = _b.numeric,\n      pluralRules = _b.pluralRules,\n      numberFormat = _b.numberFormat;\n\n  var entry = resolvedUnit;\n\n  if (style === 'short') {\n    entry = resolvedUnit + \"-short\";\n  } else if (style === 'narrow') {\n    entry = resolvedUnit + \"-narrow\";\n  }\n\n  if (!(entry in fields)) {\n    entry = resolvedUnit;\n  }\n\n  var patterns = fields[entry];\n\n  if (numeric === 'auto') {\n    if (ToString(value) in patterns) {\n      return [{\n        type: 'literal',\n        value: patterns[ToString(value)]\n      }];\n    }\n  }\n\n  var tl = 'future';\n\n  if (SameValue(value, -0) || value < 0) {\n    tl = 'past';\n  }\n\n  var po = patterns[tl];\n  var fv = typeof numberFormat.formatToParts === 'function' ? numberFormat.formatToParts(Math.abs(value)) : // TODO: If formatToParts is not supported, we assume the whole formatted\n  // number is a part\n  [{\n    type: 'literal',\n    value: numberFormat.format(Math.abs(value)),\n    unit: unit\n  }];\n  var pr = pluralRules.select(value);\n  var pattern = po[pr];\n  return MakePartsList(pattern, resolvedUnit, fv);\n}","import { PartitionRelativeTimePattern } from './PartitionRelativeTimePattern';\nexport function FormatRelativeTime(rtf, value, unit, implDetails) {\n  var parts = PartitionRelativeTimePattern(rtf, value, unit, implDetails);\n  var result = '';\n\n  for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n    var part = parts_1[_i];\n    result += part.value;\n  }\n\n  return result;\n}","import { PartitionRelativeTimePattern } from './PartitionRelativeTimePattern';\nimport { ArrayCreate } from '../262';\nexport function FormatRelativeTimeToParts(rtf, value, unit, implDetails) {\n  var parts = PartitionRelativeTimePattern(rtf, value, unit, implDetails);\n  var result = ArrayCreate(0);\n\n  for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n    var part = parts_1[_i];\n    var o = {\n      type: part.type,\n      value: part.value\n    };\n\n    if ('unit' in part) {\n      o.unit = part.unit;\n    }\n\n    result.push(o);\n  }\n\n  return result;\n}","import { CanonicalizeLocaleList } from '../CanonicalizeLocaleList';\nimport { GetOption } from '../GetOption';\nimport { ResolveLocale } from '../ResolveLocale';\nimport { invariant } from '../utils';\nimport { CoerceOptionsToObject } from '../CoerceOptionsToObject';\nvar NUMBERING_SYSTEM_REGEX = /^[a-z0-9]{3,8}(-[a-z0-9]{3,8})*$/i;\nexport function InitializeRelativeTimeFormat(rtf, locales, options, _a) {\n  var getInternalSlots = _a.getInternalSlots,\n      availableLocales = _a.availableLocales,\n      relevantExtensionKeys = _a.relevantExtensionKeys,\n      localeData = _a.localeData,\n      getDefaultLocale = _a.getDefaultLocale;\n  var internalSlots = getInternalSlots(rtf);\n  internalSlots.initializedRelativeTimeFormat = true;\n  var requestedLocales = CanonicalizeLocaleList(locales);\n  var opt = Object.create(null);\n  var opts = CoerceOptionsToObject(options);\n  var matcher = GetOption(opts, 'localeMatcher', 'string', ['best fit', 'lookup'], 'best fit');\n  opt.localeMatcher = matcher;\n  var numberingSystem = GetOption(opts, // @ts-expect-error TS option is wack\n  'numberingSystem', 'string', undefined, undefined);\n\n  if (numberingSystem !== undefined) {\n    if (!NUMBERING_SYSTEM_REGEX.test(numberingSystem)) {\n      throw new RangeError(\"Invalid numbering system \" + numberingSystem);\n    }\n  }\n\n  opt.nu = numberingSystem;\n  var r = ResolveLocale(availableLocales, requestedLocales, opt, relevantExtensionKeys, localeData, getDefaultLocale);\n  var locale = r.locale,\n      nu = r.nu;\n  internalSlots.locale = locale;\n  internalSlots.style = GetOption(opts, 'style', 'string', ['long', 'narrow', 'short'], 'long');\n  internalSlots.numeric = GetOption(opts, 'numeric', 'string', ['always', 'auto'], 'always');\n  var fields = localeData[r.dataLocale];\n  invariant(!!fields, \"Missing locale data for \" + r.dataLocale);\n  internalSlots.fields = fields;\n  internalSlots.numberFormat = new Intl.NumberFormat(locales);\n  internalSlots.pluralRules = new Intl.PluralRules(locales);\n  internalSlots.numberingSystem = nu;\n  return rtf;\n}","import { UNICODE_EXTENSION_SEQUENCE_REGEX } from './utils';\nimport { BestAvailableLocale } from './BestAvailableLocale';\n/**\n * https://tc39.es/ecma402/#sec-lookupsupportedlocales\n * @param availableLocales\n * @param requestedLocales\n */\n\nexport function LookupSupportedLocales(availableLocales, requestedLocales) {\n  var subset = [];\n\n  for (var _i = 0, requestedLocales_1 = requestedLocales; _i < requestedLocales_1.length; _i++) {\n    var locale = requestedLocales_1[_i];\n    var noExtensionLocale = locale.replace(UNICODE_EXTENSION_SEQUENCE_REGEX, '');\n    var availableLocale = BestAvailableLocale(availableLocales, noExtensionLocale);\n\n    if (availableLocale) {\n      subset.push(availableLocale);\n    }\n  }\n\n  return subset;\n}","import { ToObject } from './262';\nimport { GetOption } from './GetOption';\nimport { LookupSupportedLocales } from './LookupSupportedLocales';\n/**\n * https://tc39.es/ecma402/#sec-supportedlocales\n * @param availableLocales\n * @param requestedLocales\n * @param options\n */\n\nexport function SupportedLocales(availableLocales, requestedLocales, options) {\n  var matcher = 'best fit';\n\n  if (options !== undefined) {\n    options = ToObject(options);\n    matcher = GetOption(options, 'localeMatcher', 'string', ['lookup', 'best fit'], 'best fit');\n  }\n\n  if (matcher === 'best fit') {\n    return LookupSupportedLocales(availableLocales, requestedLocales);\n  }\n\n  return LookupSupportedLocales(availableLocales, requestedLocales);\n}","import { __extends } from \"tslib\";\n\nvar MissingLocaleDataError =\n/** @class */\nfunction (_super) {\n  __extends(MissingLocaleDataError, _super);\n\n  function MissingLocaleDataError() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'MISSING_LOCALE_DATA';\n    return _this;\n  }\n\n  return MissingLocaleDataError;\n}(Error);\n\nexport function isMissingLocaleDataError(e) {\n  return e.type === 'MISSING_LOCALE_DATA';\n}","\"use strict\"; // Type-only circular import\n// eslint-disable-next-line import/no-cycle\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar internalSlotMap = new WeakMap();\n\nfunction getInternalSlots(x) {\n  var internalSlots = internalSlotMap.get(x);\n\n  if (!internalSlots) {\n    internalSlots = Object.create(null);\n    internalSlotMap.set(x, internalSlots);\n  }\n\n  return internalSlots;\n}\n\nexports.default = getInternalSlots;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar ecma402_abstract_1 = require(\"@formatjs/ecma402-abstract\");\n\nvar get_internal_slots_1 = tslib_1.__importDefault(require(\"./get_internal_slots\"));\n\nvar RelativeTimeFormat =\n/** @class */\nfunction () {\n  function RelativeTimeFormat(locales, options) {\n    // test262/test/intl402/RelativeTimeFormat/constructor/constructor/newtarget-undefined.js\n    // Cannot use `new.target` bc of IE11 & TS transpiles it to something else\n    var newTarget = this && this instanceof RelativeTimeFormat ? this.constructor : void 0;\n\n    if (!newTarget) {\n      throw new TypeError(\"Intl.RelativeTimeFormat must be called with 'new'\");\n    }\n\n    return ecma402_abstract_1.InitializeRelativeTimeFormat(this, locales, options, {\n      getInternalSlots: get_internal_slots_1.default,\n      availableLocales: RelativeTimeFormat.availableLocales,\n      relevantExtensionKeys: RelativeTimeFormat.relevantExtensionKeys,\n      localeData: RelativeTimeFormat.localeData,\n      getDefaultLocale: RelativeTimeFormat.getDefaultLocale\n    });\n  }\n\n  RelativeTimeFormat.prototype.format = function (value, unit) {\n    if (typeof this !== 'object') {\n      throw new TypeError('format was called on a non-object');\n    }\n\n    var internalSlots = get_internal_slots_1.default(this);\n\n    if (!internalSlots.initializedRelativeTimeFormat) {\n      throw new TypeError('format was called on a invalid context');\n    }\n\n    return ecma402_abstract_1.PartitionRelativeTimePattern(this, Number(value), ecma402_abstract_1.ToString(unit), {\n      getInternalSlots: get_internal_slots_1.default\n    }).map(function (el) {\n      return el.value;\n    }).join('');\n  };\n\n  RelativeTimeFormat.prototype.formatToParts = function (value, unit) {\n    if (typeof this !== 'object') {\n      throw new TypeError('formatToParts was called on a non-object');\n    }\n\n    var internalSlots = get_internal_slots_1.default(this);\n\n    if (!internalSlots.initializedRelativeTimeFormat) {\n      throw new TypeError('formatToParts was called on a invalid context');\n    }\n\n    return ecma402_abstract_1.PartitionRelativeTimePattern(this, Number(value), ecma402_abstract_1.ToString(unit), {\n      getInternalSlots: get_internal_slots_1.default\n    });\n  };\n\n  RelativeTimeFormat.prototype.resolvedOptions = function () {\n    if (typeof this !== 'object') {\n      throw new TypeError('resolvedOptions was called on a non-object');\n    }\n\n    var internalSlots = get_internal_slots_1.default(this);\n\n    if (!internalSlots.initializedRelativeTimeFormat) {\n      throw new TypeError('resolvedOptions was called on a invalid context');\n    } // test262/test/intl402/RelativeTimeFormat/prototype/resolvedOptions/type.js\n\n\n    return {\n      locale: internalSlots.locale,\n      style: internalSlots.style,\n      numeric: internalSlots.numeric,\n      numberingSystem: internalSlots.numberingSystem\n    };\n  };\n\n  RelativeTimeFormat.supportedLocalesOf = function (locales, options) {\n    return ecma402_abstract_1.SupportedLocales(RelativeTimeFormat.availableLocales, ecma402_abstract_1.CanonicalizeLocaleList(locales), options);\n  };\n\n  RelativeTimeFormat.__addLocaleData = function () {\n    var data = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      data[_i] = arguments[_i];\n    }\n\n    for (var _a = 0, data_1 = data; _a < data_1.length; _a++) {\n      var _b = data_1[_a],\n          d = _b.data,\n          locale = _b.locale;\n      var minimizedLocale = new Intl.Locale(locale).minimize().toString();\n      RelativeTimeFormat.localeData[locale] = RelativeTimeFormat.localeData[minimizedLocale] = d;\n      RelativeTimeFormat.availableLocales.add(minimizedLocale);\n      RelativeTimeFormat.availableLocales.add(locale);\n\n      if (!RelativeTimeFormat.__defaultLocale) {\n        RelativeTimeFormat.__defaultLocale = minimizedLocale;\n      }\n    }\n  };\n\n  RelativeTimeFormat.getDefaultLocale = function () {\n    return RelativeTimeFormat.__defaultLocale;\n  };\n\n  RelativeTimeFormat.localeData = {};\n  RelativeTimeFormat.availableLocales = new Set();\n  RelativeTimeFormat.__defaultLocale = '';\n  RelativeTimeFormat.relevantExtensionKeys = ['nu'];\n  RelativeTimeFormat.polyfilled = true;\n  return RelativeTimeFormat;\n}();\n\nexports.default = RelativeTimeFormat;\n\ntry {\n  // IE11 does not have Symbol\n  if (typeof Symbol !== 'undefined') {\n    Object.defineProperty(RelativeTimeFormat.prototype, Symbol.toStringTag, {\n      value: 'Intl.RelativeTimeFormat',\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n  } // https://github.com/tc39/test262/blob/master/test/intl402/RelativeTimeFormat/constructor/length.js\n\n\n  Object.defineProperty(RelativeTimeFormat.prototype.constructor, 'length', {\n    value: 0,\n    writable: false,\n    enumerable: false,\n    configurable: true\n  }); // https://github.com/tc39/test262/blob/master/test/intl402/RelativeTimeFormat/constructor/supportedLocalesOf/length.js\n\n  Object.defineProperty(RelativeTimeFormat.supportedLocalesOf, 'length', {\n    value: 1,\n    writable: false,\n    enumerable: false,\n    configurable: true\n  });\n} catch (e) {// Meta fix so we're test262-compliant, not important\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar _1 = tslib_1.__importDefault(require(\"./\"));\n\nvar should_polyfill_1 = require(\"./should-polyfill\");\n\nif (should_polyfill_1.shouldPolyfill()) {\n  Object.defineProperty(Intl, 'RelativeTimeFormat', {\n    value: _1.default,\n    writable: true,\n    enumerable: false,\n    configurable: true\n  });\n}"],"sourceRoot":""}